N Pplhulj.indexf_ytrans_eq_l_m
C |- (!L. (!N. (!r. (!x. (!d. (!i. (!f. (!w. (((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))))))))))
T c==> c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap.LT_SUC_PRE
A |- (!n. (((NUMERAL _0) < n) ==> (n = (SUC (PRE n)))))
T c==> c< cNUMERAL c_0 f0 c= f0 cSUC cPRE f0
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D Tame_list.POWER_TO_ITER
A |- (!n. (((POWER f) n) = ((ITER n) f)))
T c= * * part cPOWER f0 f1 * * part cITER f1 f0
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.l_m
A |- (!L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m)))))))))
T c= cl'm f0 f1 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f2 cf_list f0 cITER cSUC b1 * part cnext_el f1 f2 b1
D Tame_defs2.l_y
A |- (!L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))))
T c= cl'y f0 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.indexf_lt_sizel
A |- (!s. (!x. (!y. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) < (sizel s))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f1 c< cindexf f0 f2 f1 csizel f1
D Tame_list.next_eln_indexf
A |- (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c= cindexf f0 f2 f1 f3
D Tame_list.indexf_n
A |- (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 f2 f1 f0 f2
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.AQIUNPP3
A |- (!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_list.HQYMRTX1_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Pwssrat.min_not_eq_imp_eq
A |- (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x) = (g (((POWER f) (SUC m)) x))))) m))))) = n) ==> (!i. ((i <= n) ==> ((((POWER f) (SUC i)) x) = (((POWER g) i) (f x))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER f0 cSUC cSUC b1 f1 * f2 cPOWER f0 cSUC b1 f1 b1 f3 ! c==> c<= b0 f3 c= cPOWER f0 cSUC b0 f1 cPOWER f2 b0 * f0 f1
D Pwssrat.sizel0_not_nil
A |- (!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s))))
T c= c~ c= f0 cNIL c< cNUMERAL c_0 csizel f0
D Pwssrat.next_el_rotate_to_eq
A |- (!r. ((((MEM x) r) /\ (uniq r)) ==> (((next_el r) x) = ((next_el ((rotate_to r) x)) x))))
T c==> c/\ cMEM f0 f1 cuniq f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pwssrat.next_el_sizel
A |- (!L. (((uniq L) /\ ((MEM y) L)) ==> ((((POWER (next_el L)) (sizel L)) y) = y)))
T c==> c/\ cuniq f0 cMEM f1 f0 c= cPOWER * part cnext_el f0 csizel f0 f1 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Pplhulj.ytran_me_f
A |- (!L. (!N. (!r. (!x. (!f. (!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f))))))))
T c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c= f4 cfind_face f0 f3 cMEM cytrans f0 f1 f2 f3 f5 f4
D Pplhulj.ztran_me_f
A |- (!L. (!N. (!r. (!x. (!d. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f4 cfind_face f0 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f5 cMEM cztrans f0 f1 f2 f3 f5 f4
D Pplhulj.mem_next_mark_inface
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))
T c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 cMEM f5 cfind_face f0 f3
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302948) ==> (((int_le (int_of_num (NUMERAL _0))) _10302949) ==> (((int_le _10302948) _10302949) \/ ((int_lt _10302949) _10302948))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ cint_le f0 f1 cint_lt f1 f0
+ |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = (min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) = ((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) (min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))))
T c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((f = ((find_face L) x)) /\ ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cmarked_list f0 f4 f5 f3 c/\ c= f2 cfind_face f0 f3 c==> c= f6 cnext_el f2 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f7 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f7 c==> cMEM f1 cntrans f0 f4 f5 f3 f7 c==> cMEM f3 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f7 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f7 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f7 f1 f3 c==> c= crtrans f0 f4 f5 f3 f7 f1 c==> c= cl'y f0 f1 f3 f8 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f7 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (transform_assumption_v2 L), ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> ctransform_assumption_v2 f0 c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ |- ((((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) = (min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) = T) = (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) = T))
T c= c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cT c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cT
+ |- ((((MEM x) f) /\ (((MEM (((((ztrans L) N) r) x) i)) f) /\ (uniq f))) ==> ((((POWER (next_el f)) (((indexf x) (((((ztrans L) N) r) x) i)) f)) x) = (((((ztrans L) N) r) x) i)))
T c==> c/\ cMEM f0 f1 c/\ cMEM cztrans f2 f3 f4 f0 f5 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 cztrans f2 f3 f4 f0 f5 f1 f0 cztrans f2 f3 f4 f0 f5
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c\/ c= cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ ((((((rtrans L) N) r) x) i) = r1) |- (((~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el (((((rtrans L) N) r) x) i)) (((POWER (next_el (((((rtrans L) N) r) x) i))) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3 c==> c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el crtrans f0 f1 f2 f3 f4 cPOWER * part cnext_el crtrans f0 f1 f2 f3 f4 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- (((!f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))))))))) ==> ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))))))))) f)) = ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))))))))) f))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= b0 cfind_face b2 b5 c= b1 cnext_el b0 b5 cMEM b1 cfind_face b2 b5 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= b0 cfind_face b2 b5 c= b1 cnext_el b0 b5 cMEM b1 cfind_face b2 b5 f0 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= b0 cfind_face b2 b5 c= b1 cnext_el b0 b5 cMEM b1 cfind_face b2 b5 f0
- |- ((\r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))) r)
T * / ! c==> c~ c==> c= f0 cztrans f1 b1 b0 f0 f2 c==> c~ c= cztrans f1 b1 b0 f0 f2 f0 c< f3 csizel cfind_face f1 f0 cF f4
+ ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)) |- (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)) = T)
T c==> c<= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC f5 c= c<= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC f5 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))), ((((marked_list L) N) r) x) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c==> cmarked_list f0 f1 f2 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC f6 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) ==> (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cMEM f3 f1 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x))))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c/\ call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 c==> ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) /\ ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c/\ c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ ((NUMERAL _0) < (sizel ((find_face L) x))) |- (((NUMERAL _0) < (sizel ((find_face L) x))) = T)
T c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c= c< cNUMERAL c_0 csizel cfind_face f0 f1 cT
- |- (((!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))) ==> ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))) w)) = ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))) w))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= f0 cfind_face b1 b4 c= b0 cnext_el f0 b4 cMEM b0 cfind_face b1 b4 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= f0 cfind_face b1 b4 c= b0 cnext_el f0 b4 cMEM b0 cfind_face b1 b4 f1 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= f0 cfind_face b1 b4 c= b0 cnext_el f0 b4 cMEM b0 cfind_face b1 b4 f1
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- (((int_le (int_of_num (NUMERAL _0))) _10302936) ==> (((int_le (int_of_num (NUMERAL _0))) _10302937) ==> ((((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) ==> (((all (f_last L)) (((((ntrans L) N) r) x) i)) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) i)) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c/\ cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 c==> ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (!i'. ((i' <= k) ==> (((next_el r1) (((POWER (next_el r1)) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))), (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (k < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 c==> c~ c= cztrans f3 f4 f5 f2 f6 cPOWER * part cf_list f3 csizel cfind_face f3 f2 f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f2 c==> c= f2 cztrans f3 f4 f5 f2 f6 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f3 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f0 c==> c<= csizel cfind_face f3 f2 cSUC f0 c==> c<= csizel cfind_face f3 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f3 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 csizel cfind_face f3 f2 c==> cMEM f2 clist_of_darts f3 c==> cMEM cl'z f3 cntrans f3 f4 f5 f2 f6 f1 f2 f1 c< f0 csizel cfind_face f3 f2
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c/\ call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!N. (!r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))))) ==> ((\N. (!r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))))) N)) = ((\N. (!r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))))) N))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f0 b2 c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 cMEM cztrans f0 b0 b1 b2 b3 cfind_face f0 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f0 b2 c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 cMEM cztrans f0 b0 b1 b2 b3 cfind_face f0 f1 f2 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f0 b2 c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 cMEM cztrans f0 b0 b1 b2 b3 cfind_face f0 f1 f2
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 c==> c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (f_last L)) (((((ntrans L) N) r) x) i)) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) i)) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 c==> ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (x = (((((ztrans L) N) r) x) i)), ((PRE (sizel ((find_face L) x))) <= k) |- (((PRE (sizel ((find_face L) x))) <= k) /\ (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c<= cPRE csizel cfind_face f1 f0 f5 c/\ c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c/\ call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c==> call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 c==> ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (k < (sizel ((find_face L) x)))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c< f5 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- |- ((!L. (!k. (!i. (!r. (!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))))) = T)
T c= ! ! ! ! ! c==> c= f0 cztrans b0 b4 b3 f0 b2 c==> c~ c= cztrans b0 b4 b3 f0 b2 f0 c< b1 csizel cfind_face b0 f0 cT
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) |- (((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x)))) = T)
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c= c==> c<= f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c= cPOWER * part cnext_el f0 cSUC f3 f1 cPOWER * part cf_list f2 f3 cf_list f2 f1 cT
- |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- (x = (((((ztrans L) N) r) x) i)) |- ((~ (x = (((((ztrans L) N) r) x) i))) ==> (x = (((((ztrans L) N) r) x) i)))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= f0 cztrans f1 f2 f3 f0 f4 c= f0 cztrans f1 f2 f3 f0 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 b0 c/\ c= cfind_face f0 f1 cfind_face f2 b0 c~ cfinal_list f2 crtrans f2 f3 f4 b0 b1 cMEM cztrans f2 f3 f4 b0 b1 cfind_face f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= cPOWER * part cf_list f0 cl'm f0 f7 f3 cf_list f0 f3 f9 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!a. (!b. (!c. ((((SUC a) < b) /\ (b <= c)) ==> ((a <= c) /\ ((SUC a) <= (SUC c))))))) ==> ((\a. (!b. (!c. ((((SUC a) < b) /\ (b <= c)) ==> ((a <= c) /\ ((SUC a) <= (SUC c))))))) (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))))) = ((\a. (!b. (!c. ((((SUC a) < b) /\ (b <= c)) ==> ((a <= c) /\ ((SUC a) <= (SUC c))))))) (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))))
T c= c==> ! ! ! c==> c/\ c< cSUC b0 b1 c<= b1 b2 c/\ c<= b0 b2 c<= cSUC b0 cSUC b2 * / ! ! c==> c/\ c< cSUC b0 b1 c<= b1 b2 c/\ c<= b0 b2 c<= cSUC b0 cSUC b2 cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 * / ! ! c==> c/\ c< cSUC b0 b1 c<= b1 b2 c/\ c<= b0 b2 c<= cSUC b0 cSUC b2 cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cMEM f3 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- (_10302972 = _10302977) |- ((_10302972 = _10302977) /\ ((~ (_10302973 = _10302978)) \/ ((~ (_10302974 = _10302979)) \/ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) ==> (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x))) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 f7 f3 cf_list f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= cPOWER * part cf_list f0 cl'm f0 f7 f3 cf_list f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 f9 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f3 f1 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) /\ ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) |- (((next_el ((rotate_to r1) x)) x) = ((f_list L) x))
T c==> c= cf_list f0 f1 cnext_el crotate_to f2 f1 f1 c= cnext_el crotate_to f2 f1 f1 cf_list f0 f1
- |- ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))) ==> ((\r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))) r)) = ((\r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))) r))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f2 b1 c~ cfinal_list f2 crtrans f2 f3 b0 b1 b2 cMEM cztrans f2 f3 b0 b1 b2 cfind_face f0 f1 * / ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f2 b1 c~ cfinal_list f2 crtrans f2 f3 b0 b1 b2 cMEM cztrans f2 f3 b0 b1 b2 cfind_face f0 f1 f4 * / ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f2 b1 c~ cfinal_list f2 crtrans f2 f3 b0 b1 b2 cMEM cztrans f2 f3 b0 b1 b2 cfind_face f0 f1 f4
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) (list_of_darts L)) /\ (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- (((!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))) ==> ((\x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))) x)) = ((\x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))) x))
T c= c==> ! c= cl'm f0 f1 b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 b0 cf_list f0 cITER cSUC b2 * part cnext_el f1 b0 b2 * / c= cl'm f0 f1 b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 b0 cf_list f0 cITER cSUC b2 * part cnext_el f1 b0 b2 f2 * / c= cl'm f0 f1 b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 b0 cf_list f0 cITER cSUC b2 * part cnext_el f1 b0 b2 f2
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))))))) |- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ |- (((((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))) = (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c= f4 cfind_face f0 f3 cMEM cytrans f0 f1 f2 f3 f5 f4 c/\ cMEM cytrans f0 f1 f2 f3 f5 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f6 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f5 c< cl'm f0 f6 f3 csizel cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f5 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f6 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f5 c< cl'm f0 f6 f3 csizel cfind_face f0 f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- |- ((~ (x = x)) ==> (x = x))
T c==> c~ c= f0 f0 c= f0 f0
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 f1 c/\ c= cfind_face f0 f1 cfind_face f0 f1 c~ cfinal_list f0 crtrans f0 f2 f3 f1 b0 cMEM cztrans f0 f2 f3 f1 b0 cfind_face f0 f1
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) |- (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)
T c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))) |- (((final_list L) (((((rtrans L) N) r) x) i)) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= cfinal_list f0 crtrans f0 f1 f2 f3 f4 cF
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940)))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) |- ((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) ==> (k < (sizel ((find_face L) x))))
T c==> c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cztrans f0 f2 f3 f1 f4 c==> c= cSUC cPRE cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC f6 c==> c< cNUMERAL c_0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c/\ cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 b0 f1 c< f6 csizel cfind_face f0 f1
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM r1) (((((ntrans L) N) r) x) i))) ==> (uniq r1))
T c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5
+ |- ((!a. (((int_le (int_of_num a)) (int_of_num b)) \/ ((int_lt (int_of_num b)) (int_of_num a)))) = T)
T c= ! c\/ cint_le cint_of_num b0 cint_of_num f0 cint_lt cint_of_num f0 cint_of_num b0 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- ((~ ((final_list L) r1)) ==> ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cfind_face f0 f4 c==> c= f6 cnext_el f5 f4 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f7 c==> cMEM f1 cntrans f0 f2 f3 f4 f7 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f2 f3 f4 f7 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f2 f3 f4 f7 ce_list f4 c==> cs_flag_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> c= crtrans f0 f2 f3 f4 f7 f1 c==> c= cl'y f0 f1 f4 f8 c==> c= cprev_el f1 cztrans f0 f2 f3 f4 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f4 f4 cfind_face f0 f4 c==> cMEM cytrans f0 f2 f3 f4 f7 cfind_face f0 f4 c==> cuniq cfind_face f0 f4 c==> c<= csizel cfind_face f0 f4 cl'm f0 f1 f4 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f1 f4 f4 cnext_el cfind_face f0 f4 cPOWER * part cnext_el cfind_face f0 f4 cl'm f0 f1 f4 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 f4 cf_list f0 cITER cSUC b2 * part cnext_el f1 f4 b2 c= cITER cSUC b0 * part cnext_el f1 f4 cITER b0 * part cf_list f0 cf_list f0 f4 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f4 cf_list f0 cITER cSUC b1 * part cnext_el f1 f4 b1 csizel cfind_face f0 f4
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))
T c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c==> c<= cPRE csizel cfind_face f0 f1 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c==> c<= cPRE csizel cfind_face f0 f1 f5 c==> c<= csizel cfind_face f0 f1 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f6 f1 f6 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))) ==> ((\x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))) x')) = ((\x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))) x'))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 b0 c/\ c= cfind_face f0 f1 cfind_face f2 b0 c~ cfinal_list f2 crtrans f2 f3 f4 b0 b1 cMEM cztrans f2 f3 f4 b0 b1 cfind_face f0 f1 * / ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 b0 c/\ c= cfind_face f0 f1 cfind_face f2 b0 c~ cfinal_list f2 crtrans f2 f3 f4 b0 b1 cMEM cztrans f2 f3 f4 b0 b1 cfind_face f0 f1 f5 * / ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 b0 c/\ c= cfind_face f0 f1 cfind_face f2 b0 c~ cfinal_list f2 crtrans f2 f3 f4 b0 b1 cMEM cztrans f2 f3 f4 b0 b1 cfind_face f0 f1 f5
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((l'y L) r1) x) = y) /\ ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f5 f6 f2 f7 c==> cnormal_list f0 cntrans f0 f5 f6 f2 f7 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 cztrans f0 f5 f6 f2 f7 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))) = ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ |- ((\s. (!x. (!y. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) < (sizel s)))))) ((find_face L) x))
T * / ! ! c==> c/\ cMEM b1 b0 cMEM b2 b0 c< cindexf b1 b2 b0 csizel b0 cfind_face f0 f1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cMEM f3 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) /\ ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((f = ((find_face L) x)) /\ (w = ((next_el f) x))), ((((marked_list L) N) r) x) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c==> cmarked_list f0 f1 f2 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
- |- ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= k)) ==> (((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) /\ ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) <= (SUC k)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c< cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 csizel cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c==> c/\ c< cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 csizel cfind_face f0 f2 c<= csizel cfind_face f0 f2 f6 c/\ c<= cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f6 c<= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cSUC f6 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
- (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) = T)
T c==> c==> c<= cPRE csizel cfind_face f0 f1 f2 c= cnext_el f3 cPOWER * part cnext_el f3 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c= c==> c<= cPRE csizel cfind_face f0 f1 f2 c= cnext_el f3 cPOWER * part cnext_el f3 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 cT
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) /\ (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c\/ c= cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c\/ c= cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cuniq cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- ((!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= ! ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 b2 f0 b0 c< b2 csizel b1 c= cindexf f0 b0 b1 b2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- ((!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= ! c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 b0 f0 f2 c< b0 csizel f1 c= cindexf f0 f2 f1 b0 cT
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) |- ((\i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) i)
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 * / c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 f3
+ (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) ==> (!x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 ! ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- (!x'. (((MEM x') ((find_face L) x)) ==> (~ (((find_face L) x) = NIL))))
T c==> cMEM f0 cfind_face f1 f2 c~ c= cfind_face f1 f2 cNIL
+ |- (((!s. (((NUMERAL _0) < (sizel s)) = (~ (s = NIL)))) ==> ((\s. (((NUMERAL _0) < (sizel s)) = (~ (s = NIL)))) s)) = ((\s. (((NUMERAL _0) < (sizel s)) = (~ (s = NIL)))) s))
T c= c==> ! c= c< cNUMERAL c_0 csizel b0 c~ c= b0 cNIL * / c= c< cNUMERAL c_0 csizel b0 c~ c= b0 cNIL f0 * / c= c< cNUMERAL c_0 csizel b0 c~ c= b0 cNIL f0
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ ((sizel ((find_face L) x)) <= (SUC k)) |- (((sizel ((find_face L) x)) <= (SUC k)) = T)
T c==> c<= csizel cfind_face f0 f1 cSUC f2 c= c<= csizel cfind_face f0 f1 cSUC f2 cT
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((~ (_10302970 = _10302971)) \/ ((sizel _10302970) = (sizel _10302971)))
T c\/ c~ c= f0 f1 c= csizel f0 csizel f1
+ |- (((int_le (int_of_num (NUMERAL _0))) _10302932) ==> (((int_le (int_of_num (NUMERAL _0))) _10302933) ==> ((~ ((int_le ((int_add _10302932) (int_of_num (NUMERAL (BIT1 _0))))) _10302933)) \/ ((int_le _10302932) _10302933))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le f0 f1
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
+ (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c==> c<= cPRE csizel cfind_face f0 f1 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c==> c<= cPRE csizel cfind_face f0 f1 f5 c==> c<= csizel cfind_face f0 f1 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f6 f1 f6 c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ (x = (((((ztrans L) N) r) x) i)) |- (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> c= f2 cztrans f0 f3 f4 f2 f5 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 f1 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ |- (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))))
T c\/ c= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f2 b2 c~ cfinal_list f2 crtrans f2 b0 b1 b2 b3 cMEM cztrans f2 b0 b1 b2 b3 cfind_face f0 f1
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el ((find_face L) x)) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((w = ((next_el ((find_face L) x)) x)) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cnext_el cfind_face f0 f3 f3 c==> c= f4 cfind_face f0 f3 c==> cmarked_list f0 f5 f6 f3 c/\ c= f2 cnext_el cfind_face f0 f3 f3 c==> cmarked_list f0 cntrans f0 f5 f6 f3 f7 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f5 f6 f3 f7 c==> cMEM f1 cntrans f0 f5 f6 f3 f7 c==> cMEM f3 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f5 f6 f3 f7 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f5 f6 f3 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f5 f6 f3 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f5 f6 f3 f7 ce_list f3 c==> cs_flag_list f0 cntrans f0 f5 f6 f3 f7 f1 f3 c==> c= crtrans f0 f5 f6 f3 f7 f1 c==> c= cl'y f0 f1 f3 f8 c==> c= cprev_el f1 cztrans f0 f5 f6 f3 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f5 f6 f3 f7 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) |- ((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) /\ (k < (sizel ((find_face L) x))))
T c==> c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cztrans f0 f2 f3 f1 f4 c==> c= cSUC cPRE cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c/\ cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 b0 f1 c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC f6 c==> c< cNUMERAL c_0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 c/\ c/\ cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 b0 f1 c< f6 csizel cfind_face f0 f1
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cfind_face f0 f4 c==> c= f6 cnext_el f5 f4 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f7 c==> cMEM f1 cntrans f0 f2 f3 f4 f7 c==> cMEM f4 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f2 f3 f4 f7 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f2 f3 f4 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f2 f3 f4 f7 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cfinal_list f0 cfind_list cntrans f0 f2 f3 f4 f7 ce_list f4 c==> cs_flag_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> c= crtrans f0 f2 f3 f4 f7 f1 c==> c= cl'y f0 f1 f4 f8 c==> c= cprev_el f1 cztrans f0 f2 f3 f4 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f4 f4 cfind_face f0 f4 c==> cMEM cytrans f0 f2 f3 f4 f7 cfind_face f0 f4 c==> cuniq cfind_face f0 f4 c==> c<= csizel cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 cnext_el cfind_face f0 f4 cPOWER * part cnext_el cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f4 b2 c= cPOWER * part cnext_el f1 cSUC b0 f4 cPOWER * part cf_list f0 b0 cf_list f0 f4 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 csizel cfind_face f0 f4
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el (((((rtrans L) N) r) x) i)) (((POWER (next_el (((((rtrans L) N) r) x) i))) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cSUC f6 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 crtrans f0 f2 f3 f1 f4 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el crtrans f0 f2 f3 f1 f4 cPOWER * part cnext_el crtrans f0 f2 f3 f1 f4 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- ((\L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))))) L)
T * / ! ! ! ! c==> c~ c==> c= f0 cztrans b0 b4 b3 f0 b2 c==> c~ c= cztrans b0 b4 b3 f0 b2 f0 c< b1 csizel cfind_face b0 f0 cF f1
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL _0) < (sizel s)) = (~ (s = NIL))) |- ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))
T c==> c= c< cNUMERAL c_0 csizel f0 c~ c= f0 cNIL c= c~ c= f0 cNIL c< cNUMERAL c_0 csizel f0
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c/\ cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 b0 f1 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ |- ((((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))) = ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))
T c= c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 c/\ cuniq cfind_face f0 f1 c/\ c= cPOWER * part cnext_el cfind_face f0 f1 cl'm f0 f2 f1 cnext_el cfind_face f0 f1 f1 cytrans f0 f3 f4 f1 f5 c< cl'm f0 f2 f1 csizel cfind_face f0 f1 c/\ cuniq cfind_face f0 f1 c/\ c= cPOWER * part cnext_el cfind_face f0 f1 cl'm f0 f2 f1 cnext_el cfind_face f0 f1 f1 cytrans f0 f3 f4 f1 f5 c< cl'm f0 f2 f1 csizel cfind_face f0 f1
- |- (((!x'. (((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) x') ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))) ==> ((?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))) = ((?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z))))
T c= c==> ! c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b1 b0 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b1 c==> c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c==> c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))
T c==> c= cMEM f0 cfind_face f1 f0 cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
+ |- (((!x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) ==> ((\x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) x)) = ((\x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) x))
T c= c==> ! ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3 * / ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c< cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 csizel cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cSUC f6 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))) /\ ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c/\ cuniq cflatten cntrans f2 f4 f5 f1 f6 c/\ call / c~ c= b0 cNIL cntrans f2 f4 f5 f1 f6 c/\ call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c/\ call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c/\ c/\ cuniq cflatten cntrans f2 f4 f5 f1 f6 c/\ call / c~ c= b0 cNIL cntrans f2 f4 f5 f1 f6 c/\ call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c/\ call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
- |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((!a. (!b. ((~ ((int_le (int_of_num a)) (int_of_num b))) \/ ((int_le (int_of_num a)) ((int_add (int_of_num b)) (int_of_num (NUMERAL (BIT1 _0)))))))) = (!a. (!b. ((a <= b) ==> (a <= (SUC b))))))
T c= ! ! c\/ c~ cint_le cint_of_num b0 cint_of_num b1 cint_le cint_of_num b0 cint_add cint_of_num b1 cint_of_num cNUMERAL cBIT1 c_0 ! ! c==> c<= b0 b1 c<= b0 cSUC b1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f4 f5 f1 f6 c==> cnormal_list f2 cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
+ |- ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)
T * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
- (!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) |- (((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x)))) = T)
T c==> ! c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 c= c==> c<= f4 f0 c= cnext_el f1 cPOWER * part cnext_el f1 f4 f2 cPOWER * part cf_list f3 f4 cf_list f3 f2 cT
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((!x. (((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) x) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))) ==> ((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))) = ((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= c==> ! c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b3 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b3 f3 b3 b1 b0 c< cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 csizel cfind_face f0 f3 c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 b0 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3 c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 b0 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ ((NUMERAL _0) < (sizel ((find_face L) x))) |- (((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c= c==> c==> c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1
- |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num j)) ==> ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num j)) ==> ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c/\ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c/\ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x)))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 b0 c/\ c= cfind_face f0 f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f2 f3 b0 b1 cMEM cztrans f0 f2 f3 b0 b1 cfind_face f0 f1
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) i) = r1) |- (((next_el r1) x) = ((f_list L) x))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cnext_el f5 f3 cf_list f0 f3
- |- (((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f5 f6 f2 f7 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f5 f6 f2 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f5 f6 f2 f7 c==> call part cuniq cquotient_list f0 cntrans f0 f5 f6 f2 f7 c==> cnormal_list f0 cntrans f0 f5 f6 f2 f7 c==> cfinal_list f0 cfind_list cntrans f0 f5 f6 f2 f7 ce_list f2 c==> cs_flag_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> c= cprev_el f1 cztrans f0 f5 f6 f2 f7 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)) /\ ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= f7 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = (((((ztrans L) N) r) x) i)), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) /\ (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c/\ c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r. (!x. (!f. (!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f)))))) r)
T * / ! ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 b0 b1 c= b2 cfind_face f0 b1 cMEM cytrans f0 f1 b0 b1 b3 b2 f2
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) |- ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c<= f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c= cPOWER * part cnext_el f0 cSUC f3 f1 cPOWER * part cf_list f2 f3 cf_list f2 f1
+ |- (((!L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))))) ==> ((\L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))))) L)) = ((\L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))))) L))
T c= c==> ! ! ! c= cl'm b0 b1 b2 cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cITER cSUC cSUC b4 * part cnext_el b1 b2 cf_list b0 cITER cSUC b4 * part cnext_el b1 b2 b4 * / ! ! c= cl'm b0 b1 b2 cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cITER cSUC cSUC b4 * part cnext_el b1 b2 cf_list b0 cITER cSUC b4 * part cnext_el b1 b2 b4 f0 * / ! ! c= cl'm b0 b1 b2 cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cITER cSUC cSUC b4 * part cnext_el b1 b2 cf_list b0 cITER cSUC b4 * part cnext_el b1 b2 b4 f0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= f1 cfind_face f0 b2 c= f2 cnext_el f1 b2 cMEM f2 cfind_face f0 b2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((l'y L) r1) x)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= cPOWER * part cf_list f0 cl'm f0 f7 f3 cf_list f0 f3 cl'y f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))) = T)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 b0 f7 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3 cT
- |- ((SND (x , y)) = y)
T c= cSND c, f0 f1 f1
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
+ |- (((((~ (((find_face L) x) = NIL)) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c==> c/\ c~ c= cfind_face f0 f1 cNIL c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1
+ |- (!x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x') = ((f_list L) (((POWER (next_el r1)) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER (next_el r1)) (SUC i)) x') = (((POWER (f_list L)) i) ((next_el r1) x')))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 cl'm f2 f0 f3 ! c==> c<= b0 cl'm f2 f0 f3 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cnext_el f0 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= f7 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
- (~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) |- ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) /\ F)
T c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 c/\ c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((sizel ((find_face L) x)) <= (((l'm L) r1) x)), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ ((((l'y L) r1) x) = y) |- ((((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((l'y L) r1) x)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))) = (((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))
T c==> c= cl'y f0 f1 f2 f3 c= c/\ c= cPOWER * part cf_list f0 cl'm f0 f1 f2 cf_list f0 f2 cl'y f0 f1 f2 c< cl'm f0 f1 f2 csizel cfind_face f0 f2 c/\ c= cPOWER * part cf_list f0 cl'm f0 f1 f2 cf_list f0 f2 f3 c< cl'm f0 f1 f2 csizel cfind_face f0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < (sizel ((find_face L) x)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((sizel ((find_face L) x)) <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < (sizel ((find_face L) x)))) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c\/ c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c\/ c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- (((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))))) |- F
T c==> c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) ==> ((\L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) L)) = ((\L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))) L))
T c= c==> ! c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 * / c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 f1 * / c= cMEM f0 cfind_face b0 f0 cMEM f0 clist_of_darts b0 f1
+ ((((((rtrans L) N) r) x) i) = r1), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- ((((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))) = (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) |- ((\i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) i)
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f0 f1 cf_list f2 cITER cSUC b2 * part cnext_el f0 f1 b2 c= cITER cSUC b0 * part cnext_el f0 f1 cITER b0 * part cf_list f2 cf_list f2 f1 * / c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f0 f1 cf_list f2 cITER cSUC b2 * part cnext_el f0 f1 b2 c= cITER cSUC b0 * part cnext_el f0 f1 cITER b0 * part cf_list f2 cf_list f2 f1 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\n. (((NUMERAL _0) < n) ==> ((SUC (PRE n)) = n))) (sizel ((find_face L) x)))
T * / c==> c< cNUMERAL c_0 b0 c= cSUC cPRE b0 b0 csizel cfind_face f0 f1
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- (((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))) = ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c= c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
- |- (((!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))) ==> ((\k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))) k)) = ((\k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))) k))
T c= c==> ! ! ! ! c==> c~ c==> c= f0 cztrans f1 b3 b2 f0 b1 c==> c~ c= cztrans f1 b3 b2 f0 b1 f0 c< b0 csizel cfind_face f1 f0 cF * / ! ! ! c==> c~ c==> c= f0 cztrans f1 b3 b2 f0 b1 c==> c~ c= cztrans f1 b3 b2 f0 b1 f0 c< b0 csizel cfind_face f1 f0 cF f2 * / ! ! ! c==> c~ c==> c= f0 cztrans f1 b3 b2 f0 b1 c==> c~ c= cztrans f1 b3 b2 f0 b1 f0 c< b0 csizel cfind_face f1 f0 cF f2
+ |- (((!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) ==> ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)) = ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i))
T c= c==> ! c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ |- (!x'. (!y. ((((MEM x') ((find_face L) x)) /\ ((MEM y) ((find_face L) x))) ==> ((((indexf x') y) ((find_face L) x)) < (sizel ((find_face L) x))))))
T c==> c/\ cMEM f0 cfind_face f1 f2 cMEM f3 cfind_face f1 f2 c< cindexf f0 f3 cfind_face f1 f2 csizel cfind_face f1 f2
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302946)) /\ ((((real_le ((real_add (real_of_int _10302946)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) /\ ((real_le (real_of_int _10302946)) (real_of_num (NUMERAL _0))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302946) ==> ((_10302946 = (int_of_num (NUMERAL _0))) \/ ((int_lt (int_of_num (NUMERAL _0))) _10302946)))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c= f0 cint_of_num cNUMERAL c_0 cint_lt cint_of_num cNUMERAL c_0 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) /\ (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c< cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 csizel cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ (x = (((((ztrans L) N) r) x) i)), ((NUMERAL _0) < (sizel ((find_face L) x))) |- (((NUMERAL _0) < (sizel ((find_face L) x))) /\ (((sizel ((find_face L) x)) <= (SUC k)) ==> ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) ==> (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c/\ c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ |- ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((x = (((((ztrans L) N) r) x) i)) /\ ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 cztrans f0 f3 f4 f2 f5 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((PRE (sizel ((find_face L) x))) <= k) /\ (k < (sizel ((find_face L) x))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c/\ c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
+ |- ((!w. (((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))) = T)
T c= ! c==> c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= b0 cnext_el f5 f3 c= cindexf b0 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))) ==> ((\n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))) n)) = ((\n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))) n))
T c= c==> ! c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 b0 f0 f2 c< b0 csizel f1 c= cindexf f0 f2 f1 b0 * / c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 b0 f0 f2 c< b0 csizel f1 c= cindexf f0 f2 f1 b0 f3 * / c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 b0 f0 f2 c< b0 csizel f1 c= cindexf f0 f2 f1 b0 f3
- (((prev_el r1) (((((ztrans L) N) r) x) i)) = z) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) /\ (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))
T c==> c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 c/\ c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) /\ ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num c)) ==> (((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ (~ ((int_le (int_of_num b)) (int_of_num c)))) \/ (((int_le (int_of_num a)) (int_of_num c)) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num c)) (int_of_num (NUMERAL (BIT1 _0))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c\/ c~ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f2 c~ cint_le cint_of_num f2 cint_of_num f0 c/\ cint_le cint_of_num f1 cint_of_num f0 cint_le cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((((NUMERAL (BIT1 _0)) <= (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 csizel cfind_face f0 f2 c<= csizel cfind_face f0 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 csizel cfind_face f0 f2 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (((l'm L) r1) x))) x) = (((POWER (next_el ((find_face L) x))) (SUC (((l'm L) r1) x))) x))) ==> (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cl'm f0 f7 f3 f3 cPOWER * part cnext_el cfind_face f0 f3 cSUC cl'm f0 f7 f3 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 f9 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 f5 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- (((?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))) = ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c= c==> c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c= cindexf cnext_el cfind_face f1 f4 f4 cytrans f1 f2 f3 f4 f5 cfind_face f1 f4 cl'm f1 f0 f4 c= cindexf cnext_el cfind_face f1 f4 f4 cytrans f1 f2 f3 f4 f5 cfind_face f1 f4 cl'm f1 f0 f4
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
- |- (((!x'. (((\y. ((((l'y L) r1) x) = y)) x') ==> (?y. ((((l'y L) r1) x) = y)))) ==> ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))) = ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!z. (((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= cprev_el f7 cztrans f0 f1 f2 f3 f4 b1 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
- ((all (f_last L)) (((((ntrans L) N) r) x) i)) |- (((all (f_last L)) (((((ntrans L) N) r) x) i)) = T)
T c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c= call * part cf_last f0 cntrans f0 f1 f2 f3 f4 cT
- (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((\i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) = (\i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f1 cfind_face f0 f2 c==> cmarked_list f0 f3 f4 f2 c= / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f4 f2 c/\ c= f1 cfind_face f0 f2 c~ cfinal_list f0 crtrans f0 f3 f4 f2 b0 cMEM cztrans f0 f3 f4 f2 b0 f1 / c==> c~ cfinal_list f0 crtrans f0 f3 f4 f2 b0 cMEM cztrans f0 f3 f4 f2 b0 cfind_face f0 f2
- ((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) |- (((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) = T)
T c==> c<= cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f5 c= c<= cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f5 cT
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) /\ ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f3 f1 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302946)) /\ ((((real_le ((real_add (real_of_int _10302946)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) /\ ((real_le (real_of_int _10302946)) (real_of_num (NUMERAL _0))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1 cF
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= f0 cfind_face b0 b3 c= f1 cnext_el f0 b3 cMEM f1 cfind_face b0 b3 cT
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el r1) (((POWER (next_el r1)) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c<= csizel cfind_face f0 f1 cSUC f6 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) /\ (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ |- ((\L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))))) L)
T * / ! ! c= cl'y b0 b1 b2 cPOWER * part cf_list b0 cSUC cl'm b0 b1 b2 b2 f0
+ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)) |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c==> c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4 c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
+ (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((!x. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) x) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))) ==> ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))) = ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L)))
T c= cMEM f0 cfind_face f1 f0 cMEM f0 clist_of_darts f1
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c/\ call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302948)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302949)) /\ (((real_le ((real_add (real_of_int _10302949)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948)) /\ ((real_le (real_of_int _10302948)) (real_of_int _10302949)))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_int f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- ((\y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))) y)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 * / ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 f1 f0 b0 c< f1 csizel b1 c= cindexf f0 b0 b1 f1 f2
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((~ ((final_list L) r1)) ==> (((final_list L) r1) = F)) = (((final_list L) r1) = F))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ cfinal_list f0 f5 c= cfinal_list f0 f5 cF c= cfinal_list f0 f5 cF
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
- ((MEM x) (((((rtrans L) N) r) x) i)) |- (((MEM x) (((((rtrans L) N) r) x) i)) = T)
T c==> cMEM f0 crtrans f1 f2 f3 f0 f4 c= cMEM f0 crtrans f1 f2 f3 f0 f4 cT
+ |- (((!g. (!f. (!x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x') = (g (((POWER f) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER f) (SUC i)) x') = (((POWER g) i) (f x'))))))))) ==> ((\g. (!f. (!x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x') = (g (((POWER f) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER f) (SUC i)) x') = (((POWER g) i) (f x'))))))))) (f_list L))) = ((\g. (!f. (!x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x') = (g (((POWER f) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER f) (SUC i)) x') = (((POWER g) i) (f x'))))))))) (f_list L)))
T c= c==> ! ! ! c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER b1 cSUC cSUC b4 b2 * b0 cPOWER b1 cSUC b4 b2 b4 cl'm f0 f1 f2 ! c==> c<= b3 cl'm f0 f1 f2 c= cPOWER b1 cSUC b3 b2 cPOWER b0 b3 * b1 b2 * / ! ! c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER b1 cSUC cSUC b4 b2 * b0 cPOWER b1 cSUC b4 b2 b4 cl'm f0 f1 f2 ! c==> c<= b3 cl'm f0 f1 f2 c= cPOWER b1 cSUC b3 b2 cPOWER b0 b3 * b1 b2 * part cf_list f0 * / ! ! c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER b1 cSUC cSUC b4 b2 * b0 cPOWER b1 cSUC b4 b2 b4 cl'm f0 f1 f2 ! c==> c<= b3 cl'm f0 f1 f2 c= cPOWER b1 cSUC b3 b2 cPOWER b0 b3 * b1 b2 * part cf_list f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302924)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302925)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302926)) /\ ((((real_le ((real_add ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925)) /\ ((real_le (real_of_int _10302925)) (real_of_int _10302926))) /\ (((real_le ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924)) \/ ((real_le ((real_add ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302924)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302925)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302926)) /\ ((((real_le ((real_add ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925)) /\ ((real_le (real_of_int _10302925)) (real_of_int _10302926))) /\ (((real_le ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924)) \/ ((real_le ((real_add ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_of_int f1 creal_of_int f2 c\/ creal_le creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_of_int f1 creal_of_int f2 c\/ creal_le creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ ((final_list L) r1)), (good_list L), (transform_assumption_v2 L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cfind_face f0 f4 c==> c= f6 cnext_el f5 f4 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f7 c==> cMEM f1 cntrans f0 f2 f3 f4 f7 c==> cMEM f4 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f2 f3 f4 f7 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f2 f3 f4 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f2 f3 f4 f7 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cfinal_list f0 cfind_list cntrans f0 f2 f3 f4 f7 ce_list f4 c==> cs_flag_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> c= crtrans f0 f2 f3 f4 f7 f1 c==> c= cl'y f0 f1 f4 f8 c==> c= cprev_el f1 cztrans f0 f2 f3 f4 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f4 f4 cfind_face f0 f4 c==> cMEM cytrans f0 f2 f3 f4 f7 cfind_face f0 f4 c==> cuniq cfind_face f0 f4 c==> c<= csizel cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 cnext_el cfind_face f0 f4 cPOWER * part cnext_el cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f4 b2 c= cPOWER * part cnext_el f1 cSUC b0 f4 cPOWER * part cf_list f0 b0 cf_list f0 f4 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 csizel cfind_face f0 f4
+ |- ((\x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) x)
T * / ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3 f0
- (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- ((!i. ((i <= k) ==> (((next_el r1) (((ITER i) (next_el r1)) x)) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cITER b0 * part cnext_el f5 f1 cITER b0 * part cf_list f0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cMEM f3 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ ((sizel ((find_face L) x)) <= (SUC k)) |- (((~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c<= csizel cfind_face f0 f1 cSUC f2 c= c==> c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1 c==> c==> c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10302948) ==> (((int_le (int_of_num (NUMERAL _0))) _10302949) ==> (((int_le _10302948) _10302949) \/ ((int_lt _10302949) _10302948))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ cint_le f0 f1 cint_lt f1 f0
+ |- ((!i. (!f. (!w. (((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))))) = T)
T c= ! ! ! c==> c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= b1 cfind_face f0 f3 c= b2 cnext_el b1 f3 c= cindexf b2 cytrans f0 f1 f2 f3 b0 b1 cl'm f0 crtrans f0 f1 f2 f3 b0 f3 cT
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) /\ ((!i'. ((i' <= k) ==> (((next_el r1) (((POWER (next_el r1)) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f6 c==> c<= csizel cfind_face f0 f3 cSUC f6 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 c/\ c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((\d. (!L. (((MEM d) ((find_face L) d)) = ((MEM d) (list_of_darts L))))) d)
T * / ! c= cMEM b0 cfind_face b1 b0 cMEM b0 clist_of_darts b1 f0
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f7 c< f7 csizel cfind_face f0 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ |- ((!N. (!r. (!x. (!i. (!f. (!w. (((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= b4 cfind_face f0 b2 c= b5 cnext_el b4 b2 c= cindexf b5 cytrans f0 b0 b1 b2 b3 b4 cl'm f0 crtrans f0 b0 b1 b2 b3 b2 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (?y. ((((l'y L) r1) x) = y))
T c? / c= cl'y f0 f1 f2 b0
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))) = T)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 f6 cMEM cztrans f2 f3 f4 f5 f6 cfind_face f0 f1 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c\/ c= cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ |- (((((((rtrans L) N) r) x) i) = (((((rtrans L) N) r) x) i)) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) (((((rtrans L) N) r) x) i)))
T c= c= crtrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 * / c= crtrans f0 f1 f2 f3 f4 b0 crtrans f0 f1 f2 f3 f4
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) /\ ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c/\ ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq f5 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f7 c< f7 csizel cfind_face f0 f3
+ |- ((\g. (!f. (!x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x') = (g (((POWER f) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER f) (SUC i)) x') = (((POWER g) i) (f x'))))))))) (f_list L))
T * / ! ! c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER b1 cSUC cSUC b4 b2 * b0 cPOWER b1 cSUC b4 b2 b4 cl'm f0 f1 f2 ! c==> c<= b3 cl'm f0 f1 f2 c= cPOWER b1 cSUC b3 b2 cPOWER b0 b3 * b1 b2 * part cf_list f0
+ (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((MEM x) r1) /\ (uniq r1)) ==> (((next_el r1) x) = ((next_el ((rotate_to r1) x)) x))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 f5 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c==> c/\ cMEM f3 f5 cuniq f5 c= cnext_el f5 f3 cnext_el crotate_to f5 f3 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c==> c<= cPRE csizel cfind_face f0 f1 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c==> c<= cPRE csizel cfind_face f0 f1 f5 c==> c<= csizel cfind_face f0 f1 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f6 f1 f6 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- (((!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) ==> ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)) = ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N))
T c= c==> ! ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((((l'm L) r1) x) < (sizel ((find_face L) x))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> c< cl'm f0 f1 f2 csizel cfind_face f0 f2 c< cl'm f0 f1 f2 csizel cfind_face f0 f2
+ |- (((!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))) ==> ((\N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= f1 cfind_face f0 b2 c= f2 cnext_el f1 b2 cMEM f2 cfind_face f0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= f1 cfind_face f0 b2 c= f2 cnext_el f1 b2 cMEM f2 cfind_face f0 b2 f3 * / ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= f1 cfind_face f0 b2 c= f2 cnext_el f1 b2 cMEM f2 cfind_face f0 b2 f3
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) i) = r1) |- (((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))) = (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3
- |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num j)) ==> ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- ((\x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))) x)
T * / c= cl'm f0 f1 b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 b0 cf_list f0 cITER cSUC b2 * part cnext_el f1 b0 b2 f2
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) = T)
T c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 cT
- |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x))) |- ((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)))
T c==> c= cPOWER * part cf_list f0 cl'm f0 f1 f2 cf_list f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cl'm f0 f1 f2 cnext_el cfind_face f0 f2 f2 c= cPOWER * part cnext_el cfind_face f0 f2 cl'm f0 f1 f2 cnext_el cfind_face f0 f2 f2 cPOWER * part cf_list f0 cl'm f0 f1 f2 cf_list f0 f2
+ (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- ((!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) /\ (!x. (!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 ! ! ! ! c==> c/\ cMEM b0 b2 c/\ cMEM b1 b2 c/\ cuniq b2 c/\ c= cPOWER * part cnext_el b2 b3 b0 b1 c< b3 csizel b2 c= cindexf b0 b1 b2 b3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))) = ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f7 f3 cf_list f0 cITER cSUC b2 * part cnext_el f7 f3 b2 c= cITER cSUC b0 * part cnext_el f7 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f7 f3 cf_list f0 cITER cSUC b1 * part cnext_el f7 f3 b1 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((good_list L) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cgood_list f0 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- (_10302962 = _10302964), (_10302963 = _10302965) |- ((((_10302962 < _10302963) = (_10302964 < _10302965)) ==> ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963)))) = ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c< f0 f2 c< f1 f3 c\/ c< f1 f3 c~ c< f0 f2 c\/ c< f1 f3 c~ c< f0 f2
- (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))), (((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) |- ((!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) /\ ((((indexf x) y) s) = n))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= cindexf f0 f2 f1 f3
+ |- ((!b. (!a. (((int_le (int_of_num a)) (int_of_num b)) \/ ((int_lt (int_of_num b)) (int_of_num a))))) = (!b. (!a. ((a <= b) \/ (b < a)))))
T c= ! ! c\/ cint_le cint_of_num b1 cint_of_num b0 cint_lt cint_of_num b0 cint_of_num b1 ! ! c\/ c<= b1 b0 c< b0 b1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM r1) (((((ntrans L) N) r) x) i))) ==> (uniq r1)) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))) = ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c= c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- (((((NUMERAL (BIT1 _0)) <= (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c= cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x))) ==> (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))) = ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (((l'm L) r1) x))) x) = (((POWER (next_el ((find_face L) x))) (SUC (((l'm L) r1) x))) x))) ==> (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= c==> c= cPOWER * part cf_list f0 cl'm f0 f2 f1 cf_list f0 f1 cPOWER * part cnext_el cfind_face f0 f1 cl'm f0 f2 f1 cnext_el cfind_face f0 f1 f1 c/\ c= cPOWER * part cnext_el cfind_face f0 f1 cl'm f0 f2 f1 cnext_el cfind_face f0 f1 f1 f3 c< cl'm f0 f2 f1 csizel cfind_face f0 f1 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cl'm f0 f2 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cl'm f0 f2 f1 f1 c/\ c= cPOWER * part cnext_el cfind_face f0 f1 cl'm f0 f2 f1 cnext_el cfind_face f0 f1 f1 f3 c< cl'm f0 f2 f1 csizel cfind_face f0 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 c==> ! c==> c<= b0 f5 c= cPOWER * part cnext_el f6 cSUC b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f5 csizel cfind_face f0 f1 c==> ! c==> c<= b0 f5 c= cPOWER * part cnext_el f6 cSUC b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f5 csizel cfind_face f0 f1
+ |- (((!n. (((NUMERAL _0) < n) ==> ((SUC (PRE n)) = n))) ==> ((\n. (((NUMERAL _0) < n) ==> ((SUC (PRE n)) = n))) (sizel ((find_face L) x)))) = ((\n. (((NUMERAL _0) < n) ==> ((SUC (PRE n)) = n))) (sizel ((find_face L) x))))
T c= c==> ! c==> c< cNUMERAL c_0 b0 c= cSUC cPRE b0 b0 * / c==> c< cNUMERAL c_0 b0 c= cSUC cPRE b0 b0 csizel cfind_face f0 f1 * / c==> c< cNUMERAL c_0 b0 c= cSUC cPRE b0 b0 csizel cfind_face f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((sizel ((find_face L) x)) <= (((l'm L) r1) x)), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 f2 cf_list f0 cITER cSUC b2 * part cnext_el f1 f2 b2 c= cITER cSUC b0 * part cnext_el f1 f2 cITER b0 * part cf_list f0 cf_list f0 f2 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f2 f5 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 cnext_el f7 f2 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f8 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f1 f2 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cl'm f0 f1 f2 f2 c==> c= cl'y f0 f1 f2 f9 c==> c= f7 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> c<= csizel cfind_face f0 f2 cl'm f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f2 cf_list f0 cITER cSUC b1 * part cnext_el f1 f2 b1 csizel cfind_face f0 f2
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))) x)
T * / c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= f3 cfind_face f0 b0 c= f4 cnext_el f3 b0 cMEM f4 cfind_face f0 b0 f5
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) /\ ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 f3 c==> c= f4 cfind_face f0 f1 c==> c= crtrans f0 f5 f6 f1 f7 f2 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f1 f7 cfind_face f0 f1 c==> cmarked_list f0 f5 f6 f1 c==> cmarked_list f0 cntrans f0 f5 f6 f1 f7 f2 f1 c/\ ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f2 cSUC b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f3 csizel cfind_face f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((l'm L) r1) x)) ((f_list L) x)) = (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x))) ==> (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = y) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 f7 f3 cf_list f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 f9 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cSUC f6 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f7 f3 cf_list f0 cITER cSUC b2 * part cnext_el f7 f3 b2 c= cITER cSUC b0 * part cnext_el f7 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f7 f3 cf_list f0 cITER cSUC b1 * part cnext_el f7 f3 b1 csizel cfind_face f0 f3
+ (x = (((((ztrans L) N) r) x) i)) |- (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f6 cfind_face f0 f3 c==> c= f7 cnext_el f6 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f8 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f5 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f5 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f5 f3 cf_list f0 cITER cSUC b2 * part cnext_el f5 f3 b2 c= cITER cSUC b0 * part cnext_el f5 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f3 cf_list f0 cITER cSUC b1 * part cnext_el f5 f3 b1 csizel cfind_face f0 f3
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- ((((((MEM x) r1) /\ (uniq r1)) ==> (((next_el r1) x) = ((next_el ((rotate_to r1) x)) x))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))) = ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c= c==> c==> c/\ cMEM f0 f1 cuniq f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f0 cf_list f2 cPOWER * part cnext_el f1 cSUC b1 f0 b1 csizel cfind_face f2 f0 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f0 cf_list f2 cPOWER * part cnext_el f1 cSUC b1 f0 b1 csizel cfind_face f2 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- (((((NUMERAL (BIT1 _0)) <= (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cl'm f0 f5 f1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (x = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c< f5 csizel cfind_face f1 f0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((sizel ((find_face L) x)) <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < (sizel ((find_face L) x)))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c\/ c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((\i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) (SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cMEM cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f2 clist_of_darts f0 c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ |- (((x = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = (((((POWER (f_list L)) (NUMERAL _0)) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cNUMERAL c_0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
- (!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) |- ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))
T c==> ! c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 c==> c<= f4 f0 c= cnext_el f1 cPOWER * part cnext_el f1 f4 f2 cPOWER * part cf_list f3 f4 cf_list f3 f2
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((NUMERAL (BIT1 _0)) <= (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 csizel cfind_face f0 f2 c<= csizel cfind_face f0 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 csizel cfind_face f0 f2 f2
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) |- (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) = T)
T c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 c= c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) /\ (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?m. t) = t)
T c= c? / f0 f0
+ |- ((\x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))) x)
T * / c= cl'y f0 f1 b0 cPOWER * part cf_list f0 cSUC cl'm f0 f1 b0 b0 f2
+ ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)) |- ((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x))
T c==> c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 c= cPOWER * part cnext_el cfind_face f0 f1 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (k < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c==> c= f4 cfind_face f2 f1 c==> c= crtrans f2 f5 f6 f1 f7 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f5 f6 f1 f7 cfind_face f2 f1 c==> cmarked_list f2 f5 f6 f1 c==> cmarked_list f2 cntrans f2 f5 f6 f1 f7 f0 f1 c< f3 csizel cfind_face f2 f1
+ (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= k)) ==> (((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) /\ ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) <= (SUC k))))
T c==> c/\ c< cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 csizel cfind_face f1 f0 c<= csizel cfind_face f1 f0 f5 c/\ c<= cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f5 c<= cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC f5
+ |- ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)
T * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) i)) ==> ((flag_list L) (((((ntrans L) N) r) x) i))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))))) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- ((((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i))))) = T)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c= c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 cT
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) |- (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) = F)
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c= c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4 cF
+ |- ((((((MEM x) f) /\ (((MEM (((((ztrans L) N) r) x) i)) f) /\ (uniq f))) ==> ((((POWER (next_el f)) (((indexf x) (((((ztrans L) N) r) x) i)) f)) x) = (((((ztrans L) N) r) x) i))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c= c==> c==> c/\ cMEM f0 f1 c/\ cMEM cztrans f2 f3 f4 f0 f5 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 cztrans f2 f3 f4 f0 f5 f1 f0 cztrans f2 f3 f4 f0 f5 c==> ! c==> c<= b0 f6 c= cnext_el f7 cPOWER * part cnext_el f7 b0 f0 cPOWER * part cf_list f2 b0 cf_list f2 f0 c< f6 csizel cfind_face f2 f0 c==> ! c==> c<= b0 f6 c= cnext_el f7 cPOWER * part cnext_el f7 b0 f0 cPOWER * part cf_list f2 b0 cf_list f2 f0 c< f6 csizel cfind_face f2 f0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302924)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302925)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302926)) /\ ((((real_le ((real_add ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925)) /\ ((real_le (real_of_int _10302925)) (real_of_int _10302926))) /\ (((real_le ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924)) \/ ((real_le ((real_add ((real_add (real_of_int _10302926)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302924)) (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c/\ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_of_int f1 creal_of_int f2 c\/ creal_le creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x) = (g (((POWER f) (SUC m)) x))))) m))))) = n) ==> (!i. ((i <= n) ==> ((((POWER f) (SUC i)) x) = (((POWER g) i) (f x)))))) = T)
T c= c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER f0 cSUC cSUC b1 f1 * f2 cPOWER f0 cSUC b1 f1 b1 f3 ! c==> c<= b0 f3 c= cPOWER f0 cSUC b0 f1 cPOWER f2 b0 * f0 f1 cT
- |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
+ ((((l'y L) r1) x) = y) |- (y = (((l'y L) r1) x))
T c==> c= cl'y f0 f1 f2 f3 c= f3 cl'y f0 f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f7 f3 cf_list f0 cITER cSUC b2 * part cnext_el f7 f3 b2 c= cITER cSUC b0 * part cnext_el f7 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f7 f3 cf_list f0 cITER cSUC b1 * part cnext_el f7 f3 b1 csizel cfind_face f0 f3
+ |- (((!a. (!b. ((a <= b) ==> (a <= (SUC b))))) ==> ((\a. (!b. ((a <= b) ==> (a <= (SUC b))))) (sizel ((find_face L) x)))) = ((\a. (!b. ((a <= b) ==> (a <= (SUC b))))) (sizel ((find_face L) x))))
T c= c==> ! ! c==> c<= b0 b1 c<= b0 cSUC b1 * / ! c==> c<= b0 b1 c<= b0 cSUC b1 csizel cfind_face f0 f1 * / ! c==> c<= b0 b1 c<= b0 cSUC b1 csizel cfind_face f0 f1
- |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((f = ((find_face L) x)) /\ ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- (((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c= cindexf f0 f2 f1 f3 cT
- |- ((((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z))) = T)
T c= c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((l'y L) r1) x) = y) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cl'y f0 f7 f3 f8 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) (list_of_darts L)) /\ (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cMEM f3 clist_of_darts f0 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))
T c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c==> c<= cPRE csizel cfind_face f0 f1 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c==> c<= cPRE csizel cfind_face f0 f1 f5 c==> c<= csizel cfind_face f0 f1 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f6 f1 f6 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))) |- ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c= cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (uniq (list_of_darts L)), ((MEM x) (list_of_darts L)) |- ((((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))) = ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) /\ ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c==> c<= cPRE csizel cfind_face f0 f1 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f1 f1 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f1 cf_list f0 f1 c==> c<= cPRE csizel cfind_face f0 f1 f5 c==> c<= csizel cfind_face f0 f1 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f6 f1 f6 c/\ c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- ((\n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) n)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 * / ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 f0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) |- ((((sizel ((find_face L) x)) <= (SUC k)) ==> ((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = ((((sizel ((find_face L) x)) <= k) ==> ((sizel ((find_face L) x)) <= (SUC k))) ==> ((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c= c==> c<= csizel cfind_face f2 f1 cSUC f3 c==> c==> c<= csizel cfind_face f2 f1 cSUC f3 c~ c= cl'z f2 cntrans f2 f4 f5 f1 f6 f0 f1 cPOWER * part cf_list f2 csizel cfind_face f2 f1 f1 c==> ! c==> c<= b0 f3 c= cnext_el f0 cPOWER * part cnext_el f0 b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c< f3 csizel cfind_face f2 f1 c==> c==> c<= csizel cfind_face f2 f1 f3 c<= csizel cfind_face f2 f1 cSUC f3 c==> c==> c<= csizel cfind_face f2 f1 cSUC f3 c~ c= cl'z f2 cntrans f2 f4 f5 f1 f6 f0 f1 cPOWER * part cf_list f2 csizel cfind_face f2 f1 f1 c==> ! c==> c<= b0 f3 c= cnext_el f0 cPOWER * part cnext_el f0 b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c< f3 csizel cfind_face f2 f1
+ ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) |- ((sizel ((find_face L) x)) <= k)
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c<= csizel cfind_face f2 f1 f3
+ (x = (((((ztrans L) N) r) x) i)), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) |- (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) /\ (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c/\ c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = (((((ztrans L) N) r) x) i)), ((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_10302976 = _10302981), (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f4 f6 f2 f8 f0 cztrans f5 f7 f3 f9 f1
+ |- (((!r. (!x. (!f. (!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f)))))) ==> ((\r. (!x. (!f. (!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f)))))) r)) = ((\r. (!x. (!f. (!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f)))))) r))
T c= c==> ! ! ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 b0 b1 c= b2 cfind_face f0 b1 cMEM cytrans f0 f1 b0 b1 b3 b2 * / ! ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 b0 b1 c= b2 cfind_face f0 b1 cMEM cytrans f0 f1 b0 b1 b3 b2 f2 * / ! ! ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 b0 b1 c= b2 cfind_face f0 b1 cMEM cytrans f0 f1 b0 b1 b3 b2 f2
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!L'. (!N. (!r. (!x'. (!d. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((f = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) f)))))))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= f4 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b5 cMEM cztrans b0 b1 b2 b3 b5 f4 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))) x)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 b0 c/\ c= cfind_face f0 f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f2 f3 b0 b1 cMEM cztrans f0 f2 f3 b0 b1 cfind_face f0 f1 f1
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) L')
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 f2
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- (((!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))) ==> ((\y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))) y)) = ((\y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))) y))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= c==> ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 f1 f0 b0 c< f1 csizel b1 c= cindexf f0 b0 b1 f1 * / ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 f1 f0 b0 c< f1 csizel b1 c= cindexf f0 b0 b1 f1 f2 * / ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 f1 f0 b0 c< f1 csizel b1 c= cindexf f0 b0 b1 f1 f2
+ (x = (((((ztrans L) N) r) x) i)), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) ==> (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) ==> ((\N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) N)) = ((\N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) N))
T c= c==> ! c==> c~ c==> c= f0 cztrans f1 b0 f2 f0 f3 c==> c~ c= cztrans f1 b0 f2 f0 f3 f0 c< f4 csizel cfind_face f1 f0 cF * / c==> c~ c==> c= f0 cztrans f1 b0 f2 f0 f3 c==> c~ c= cztrans f1 b0 f2 f0 f3 f0 c< f4 csizel cfind_face f1 f0 cF f5 * / c==> c~ c==> c= f0 cztrans f1 b0 f2 f0 f3 c==> c~ c= cztrans f1 b0 f2 f0 f3 f0 c< f4 csizel cfind_face f1 f0 cF f5
- ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- ((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k)
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3
+ |- ((((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) ((prev_el r1) (((((ztrans L) N) r) x) i)))
T * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 cprev_el f0 cztrans f1 f2 f3 f4 f5
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i))))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c/\ call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c/\ call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
+ |- ((((MEM x) ((find_face L) x)) /\ ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))))
T c==> c/\ cMEM f0 cfind_face f1 f0 cMEM cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c< cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 csizel cfind_face f1 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((((rtrans L) N) r) x) i) = r1) /\ (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))) ==> ((\i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))) i)) = ((\i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))) i))
T c= c==> ! ! ! c==> c~ c==> c= f0 cztrans f1 b2 b1 f0 b0 c==> c~ c= cztrans f1 b2 b1 f0 b0 f0 c< f2 csizel cfind_face f1 f0 cF * / ! ! c==> c~ c==> c= f0 cztrans f1 b2 b1 f0 b0 c==> c~ c= cztrans f1 b2 b1 f0 b0 f0 c< f2 csizel cfind_face f1 f0 cF f3 * / ! ! c==> c~ c==> c= f0 cztrans f1 b2 b1 f0 b0 c==> c~ c= cztrans f1 b2 b1 f0 b0 f0 c< f2 csizel cfind_face f1 f0 cF f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- ((((~ (((find_face L) x) = NIL)) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c==> c/\ c~ c= cfind_face f0 f1 cNIL c<= csizel cfind_face f0 f1 cSUC f6 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
- (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- (((f_list L) (((POWER (f_list L)) k) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) k) x)))
T c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c= cf_list f0 cPOWER * part cf_list f0 f3 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 f3 f2
+ |- (((!m. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) m) x) = (((POWER (next_el ((find_face L) x))) m) x)))) ==> ((\m. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) m) x) = (((POWER (next_el ((find_face L) x))) m) x)))) (sizel ((find_face L) x)))) = ((\m. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) m) x) = (((POWER (next_el ((find_face L) x))) m) x)))) (sizel ((find_face L) x))))
T c= c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 csizel cfind_face f0 f1 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 csizel cfind_face f0 f1
- (_10302962 = _10302964), (_10302963 = _10302965) |- ((_10302963 = _10302965) /\ ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- ((((((((rtrans L) N) r) x) i) = r1) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))) = ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((((rtrans L) N) r) x) i) = r1) /\ (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- (((!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m)))))))) ==> ((\r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m)))))))) r)) = ((\r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m)))))))) r))
T c= c==> ! ! c= cl'm f0 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cITER cSUC cSUC b3 * part cnext_el b0 b1 cf_list f0 cITER cSUC b3 * part cnext_el b0 b1 b3 * / ! c= cl'm f0 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cITER cSUC cSUC b3 * part cnext_el b0 b1 cf_list f0 cITER cSUC b3 * part cnext_el b0 b1 b3 f1 * / ! c= cl'm f0 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cITER cSUC cSUC b3 * part cnext_el b0 b1 cf_list f0 cITER cSUC b3 * part cnext_el b0 b1 b3 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ |- ((!g. (!f. (!x. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER f) (SUC (SUC m))) x) = (g (((POWER f) (SUC m)) x))))) m))))) = n) ==> (!i. ((i <= n) ==> ((((POWER f) (SUC i)) x) = (((POWER g) i) (f x))))))))) = T)
T c= ! ! ! c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cPOWER b1 cSUC cSUC b4 b2 * b0 cPOWER b1 cSUC b4 b2 b4 f0 ! c==> c<= b3 f0 c= cPOWER b1 cSUC b3 b2 cPOWER b0 b3 * b1 b2 cT
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) /\ (k < (sizel ((find_face L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c==> c= f4 cfind_face f2 f1 c==> c= crtrans f2 f5 f6 f1 f7 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f5 f6 f1 f7 cfind_face f2 f1 c==> cmarked_list f2 f5 f6 f1 c==> cmarked_list f2 cntrans f2 f5 f6 f1 f7 f0 f1 c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c< f3 csizel cfind_face f2 f1
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ ((((((rtrans L) N) r) x) i) = r1), ((MEM x) (((((rtrans L) N) r) x) i)) |- ((MEM x) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 cMEM f3 f5
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
- |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (~ ((final_list L) r1)) |- ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> ((((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i))))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cfind_face f0 f4 c==> c= f6 cnext_el f5 f4 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f7 c==> cMEM f1 cntrans f0 f2 f3 f4 f7 c==> cMEM f4 f1 c==> c/\ call part cuniq cquotient_list f0 cntrans f0 f2 f3 f4 f7 call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f2 f3 f4 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f2 f3 f4 f7 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cfinal_list f0 cfind_list cntrans f0 f2 f3 f4 f7 ce_list f4 c==> cs_flag_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> c= crtrans f0 f2 f3 f4 f7 f1 c==> c= cl'y f0 f1 f4 f8 c==> c= cprev_el f1 cztrans f0 f2 f3 f4 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f4 f4 cfind_face f0 f4 c==> cMEM cytrans f0 f2 f3 f4 f7 cfind_face f0 f4 c==> cuniq cfind_face f0 f4 c==> c<= csizel cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 cnext_el cfind_face f0 f4 cPOWER * part cnext_el cfind_face f0 f4 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f4 b2 c= cPOWER * part cnext_el f1 cSUC b0 f4 cPOWER * part cf_list f0 b0 cf_list f0 f4 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f4 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f4 b1 csizel cfind_face f0 f4
+ (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) |- (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 ! c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 b0 f0 f2 c< b0 csizel f1 c= cindexf f0 f2 f1 b0
+ |- ((\s. (!x. (((MEM x) s) ==> (~ (s = NIL))))) ((find_face L) x))
T * / ! c==> cMEM b1 b0 c~ c= b0 cNIL cfind_face f0 f1
+ ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c< cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 csizel cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cSUC cPRE cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ (x = (((((ztrans L) N) r) x) i)), ((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x), ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((PRE (sizel ((find_face L) x))) <= k), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c==> c<= cPRE csizel cfind_face f1 f0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c<= csizel cfind_face f1 f0 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f6 f0 f6 c==> c~ c= cztrans f1 f2 f3 f0 f4 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c< f5 csizel cfind_face f1 f0
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ ((final_list L) r1)) |- ((~ ((final_list L) r1)) /\ ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cfind_face f0 f4 c==> c= f6 cnext_el f5 f4 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f7 c==> cMEM f1 cntrans f0 f2 f3 f4 f7 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f2 f3 f4 f7 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f2 f3 f4 f7 ce_list f4 c==> cs_flag_list f0 cntrans f0 f2 f3 f4 f7 f1 f4 c==> c= crtrans f0 f2 f3 f4 f7 f1 c==> c= cl'y f0 f1 f4 f8 c==> c= cprev_el f1 cztrans f0 f2 f3 f4 f7 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f4 f4 cfind_face f0 f4 c==> cMEM cytrans f0 f2 f3 f4 f7 cfind_face f0 f4 c==> cuniq cfind_face f0 f4 c==> c<= csizel cfind_face f0 f4 cl'm f0 f1 f4 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f1 f4 f4 cnext_el cfind_face f0 f4 cPOWER * part cnext_el cfind_face f0 f4 cl'm f0 f1 f4 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 f4 cf_list f0 cITER cSUC b2 * part cnext_el f1 f4 b2 c= cITER cSUC b0 * part cnext_el f1 f4 cITER b0 * part cf_list f0 cf_list f0 f4 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f4 cf_list f0 cITER cSUC b1 * part cnext_el f1 f4 b1 csizel cfind_face f0 f4
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x)) /\ (((((POWER (next_el ((find_face L) x))) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 c==> c= cPOWER * part cnext_el cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (SND (((POWER ((transform_list L) x)) i) (N , r)))) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 f3
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4
- (((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) |- ((!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))) ==> ((((indexf x) y) s) = n))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c= cindexf f0 f2 f1 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ ((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) |- (((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))) = ((~ ((((((ztrans L) N) r) x) i) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c==> c= cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 f1 c= c==> c~ c= cztrans f0 f2 f3 f1 f4 f1 c< f5 csizel cfind_face f0 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ |- ((\n. (((ITER n) f) = ((POWER f) n))) n)
T * / c= * * part cITER b0 f0 * * part cPOWER f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) <= a) = ((NUMERAL _0) < a))
T c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) (((((ntrans L) N) r) x) i))
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 cntrans f0 f1 f2 f3 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ |- ((((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ (~ ((int_le (int_of_num b)) (int_of_num c)))) \/ (((int_le (int_of_num a)) (int_of_num c)) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num c)) (int_of_num (NUMERAL (BIT1 _0))))))) = T)
T c= c\/ c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c~ cint_le cint_of_num f1 cint_of_num f2 c/\ cint_le cint_of_num f0 cint_of_num f2 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f2 cint_of_num cNUMERAL cBIT1 c_0 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((((l'y L) r1) x) = y) = ((\y. ((((l'y L) r1) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\s. (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM s) (((((ntrans L) N) r) x) i))) ==> (uniq s))) r1)
T * / c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM b0 cntrans f0 f1 f2 f3 f4 cuniq b0 f5
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f7 f3 cf_list f0 cITER cSUC b2 * part cnext_el f7 f3 b2 c= cITER cSUC b0 * part cnext_el f7 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f7 f3 cf_list f0 cITER cSUC b1 * part cnext_el f7 f3 b1 csizel cfind_face f0 f3
+ |- (!a. (!b. (!c. ((((SUC a) < b) /\ (b <= c)) ==> ((a <= c) /\ ((SUC a) <= (SUC c)))))))
T c==> c/\ c< cSUC f0 f1 c<= f1 f2 c/\ c<= f0 f2 c<= cSUC f0 cSUC f2
- (_10302970 = _10302971) |- ((_10302970 = _10302971) /\ ((sizel _10302970) = (sizel _10302971)))
T c==> c= f0 f1 c/\ c= f0 f1 c= csizel f0 csizel f1
+ (x = (((((ztrans L) N) r) x) i)), ((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) |- (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) /\ ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c/\ c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ (~ ((((((ztrans L) N) r) x) i) = x)), (x = (((((ztrans L) N) r) x) i)) |- (k < (sizel ((find_face L) x)))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c< f5 csizel cfind_face f0 f3
+ (uniq (flatten (((((ntrans L) N) r) x) i))) |- ((uniq (flatten (((((ntrans L) N) r) x) i))) = T)
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c= cuniq cflatten cntrans f0 f1 f2 f3 f4 cT
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((((sizel ((find_face L) x)) <= k) ==> ((sizel ((find_face L) x)) <= (SUC k))) ==> ((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = ((((sizel ((find_face L) x)) <= (SUC k)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c==> c<= csizel cfind_face f0 f1 f2 c<= csizel cfind_face f0 f1 cSUC f2 c==> c==> c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1 c==> c==> c<= csizel cfind_face f0 f1 cSUC f2 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f6 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f2 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f2 csizel cfind_face f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- ((!r. (!x. (!i. (!f. (!w. (((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x)))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))))))) = T)
T c= ! ! ! ! ! c==> c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= b3 cfind_face f0 b1 c= b4 cnext_el b3 b1 c= cindexf b4 cytrans f0 f1 b0 b1 b2 b3 cl'm f0 crtrans f0 f1 b0 b1 b2 b1 cT
+ |- ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)
T * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) = T)
T c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 cT
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f7 c< f7 csizel cfind_face f0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((w = ((next_el f) x)) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c= f5 cnext_el f6 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ ((((((rtrans L) N) r) x) i) = r1), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3
- |- ((((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = T)
T c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 cT
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
- (((prev_el r1) (((((ztrans L) N) r) x) i)) = z) |- ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z)
T c==> c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6
+ |- (((int_le (int_of_num (NUMERAL _0))) _10302940) ==> (((int_le (int_of_num (NUMERAL _0))) _10302941) ==> ((~ ((int_le _10302940) _10302941)) \/ ((int_le _10302940) ((int_add _10302941) (int_of_num (NUMERAL (BIT1 _0))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le f0 f1 cint_le f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))) ==> ((\x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))) x)) = ((\x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))) x))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 b0 c/\ c= cfind_face f0 f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f2 f3 b0 b1 cMEM cztrans f0 f2 f3 b0 b1 cfind_face f0 f1 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 b0 c/\ c= cfind_face f0 f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f2 f3 b0 b1 cMEM cztrans f0 f2 f3 b0 b1 cfind_face f0 f1 f1 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 b0 c/\ c= cfind_face f0 f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f2 f3 b0 b1 cMEM cztrans f0 f2 f3 b0 b1 cfind_face f0 f1 f1
- |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)) |- ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i))
T c==> c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (x = (((((ztrans L) N) r) x) i)) |- ((((x = (((((ztrans L) N) r) x) i)) /\ (x = x)) ==> ((((((ztrans L) N) r) x) i) = x)) = ((((((ztrans L) N) r) x) i) = x))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c= c==> c/\ c= f0 cztrans f1 f2 f3 f0 f4 c= f0 f0 c= cztrans f1 f2 f3 f0 f4 f0 c= cztrans f1 f2 f3 f0 f4 f0
+ |- ((\a. (!b. ((a <= b) ==> (a <= (SUC b))))) (sizel ((find_face L) x)))
T * / ! c==> c<= b0 b1 c<= b0 cSUC b1 csizel cfind_face f0 f1
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f7 c==> ! c==> c<= b0 f7 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f7 csizel cfind_face f0 f2
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((NUMERAL (BIT1 _0)) <= (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c< cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 csizel cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c= cSUC cPRE cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((((l'm L) r1) x) < (sizel ((find_face L) x))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x)))), (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < (sizel ((find_face L) x)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((l'm L) r1) x) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c==> c\/ c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cSUC f6 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ cfinal_list f0 f1 c/\ cMEM cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c< f6 csizel cfind_face f0 f2
+ |- (((((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)) \/ ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c\/ c= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cNUMERAL c_0 c< cNUMERAL c_0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) N) r) x) |- ((((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> cmarked_list f0 f2 f3 f4 c= c==> cMEM cztrans f0 f2 f3 f4 f5 cfind_face f0 f4 c==> ! c==> c<= b0 f6 c= cPOWER * part cnext_el f1 cSUC b0 f4 cPOWER * part cf_list f0 b0 cf_list f0 f4 c< f6 csizel cfind_face f0 f4 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 f4 c/\ c= cfind_face f0 f4 cfind_face f0 f4 c~ cfinal_list f0 crtrans f0 f2 f3 f4 f5 cMEM cztrans f0 f2 f3 f4 f5 cfind_face f0 f4 c==> ! c==> c<= b0 f6 c= cPOWER * part cnext_el f1 cSUC b0 f4 cPOWER * part cf_list f0 b0 cf_list f0 f4 c< f6 csizel cfind_face f0 f4
- |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) ==> ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)) = ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x))
T c= c==> ! ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num c)) ==> (((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ (~ ((int_le (int_of_num b)) (int_of_num c)))) \/ (((int_le (int_of_num a)) (int_of_num c)) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num c)) (int_of_num (NUMERAL (BIT1 _0)))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num c)) ==> (((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ (~ ((int_le (int_of_num b)) (int_of_num c)))) \/ (((int_le (int_of_num a)) (int_of_num c)) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num c)) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f2 c\/ c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c~ cint_le cint_of_num f1 cint_of_num f2 c/\ cint_le cint_of_num f0 cint_of_num f2 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f2 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f2 c\/ c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c~ cint_le cint_of_num f1 cint_of_num f2 c/\ cint_le cint_of_num f0 cint_of_num f2 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f2 cint_of_num cNUMERAL cBIT1 c_0
+ ((NUMERAL _0) < (sizel ((find_face L) x))) |- ((((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (k < (sizel ((find_face L) x)))) = ((((NUMERAL _0) < (sizel ((find_face L) x))) ==> ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x)))) ==> (k < (sizel ((find_face L) x)))))
T c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c= c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c< f2 csizel cfind_face f0 f1 c==> c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c< f2 csizel cfind_face f0 f1
+ |- (((!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))) ==> ((\y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))) (((((ztrans L) N) r) x) i))) = ((\y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))) (((((ztrans L) N) r) x) i)))
T c= c==> ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 cuniq b1 c= cPOWER * part cnext_el b1 cindexf f0 b0 b1 f0 b0 * / ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 cuniq b1 c= cPOWER * part cnext_el b1 cindexf f0 b0 b1 f0 b0 cztrans f1 f2 f3 f0 f4 * / ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 cuniq b1 c= cPOWER * part cnext_el b1 cindexf f0 b0 b1 f0 b0 cztrans f1 f2 f3 f0 f4
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c==> cMEM cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) (f_list L)) x)))) |- ((((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) (f_list L)) x)))) = T)
T c==> c==> c<= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f0 cf_list f1 cITER cSUC b1 * part cnext_el f5 f0 b1 c~ c= cl'z f1 cntrans f1 f2 f3 f0 f4 f5 f0 cITER cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 * part cf_list f1 f0 c= c==> c<= cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f0 cf_list f1 cITER cSUC b1 * part cnext_el f5 f0 b1 c~ c= cl'z f1 cntrans f1 f2 f3 f0 f4 f5 f0 cITER cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 * part cf_list f1 f0 cT
- ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- |- ((_10302966 = _10302968) ==> ((~ (_10302967 = _10302969)) \/ (((find_face _10302966) _10302967) = ((find_face _10302968) _10302969))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302946)) /\ ((((real_le ((real_add (real_of_int _10302946)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) /\ ((real_le (real_of_int _10302946)) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\r. ((((MEM x) r) /\ (uniq r)) ==> (((next_el r) x) = ((next_el ((rotate_to r) x)) x)))) r1)
T * / c==> c/\ cMEM f0 b0 cuniq b0 c= cnext_el b0 f0 cnext_el crotate_to b0 f0 f0 f1
+ ((((((rtrans L) N) r) x) i) = r1) |- (((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el r1) (((POWER (next_el r1)) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el (((((rtrans L) N) r) x) i)) (((POWER (next_el (((((rtrans L) N) r) x) i))) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3 c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el crtrans f0 f1 f2 f3 f4 cPOWER * part cnext_el crtrans f0 f1 f2 f3 f4 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3
- |- ((!x. (!L. (!k. (!i. (!r. (!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))))))) = (!x. (!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 ! ! ! ! ! ! c==> c~ c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((\y. ((((l'y L) r1) x) = y)) y) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cl'y f0 f7 f3 b0 f8 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (SND (((POWER ((transform_list L) x)) i) (N , r)))) x))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (SND (((POWER ((transform_list L) x)) i) (N , r)))) x))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c= c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 f3 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC f6 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c/\ call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c==> call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 c==> call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
- |- ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- ((((((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= k)) ==> (((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) /\ ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) <= (SUC k)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c==> c/\ c< cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 csizel cfind_face f1 f0 c<= csizel cfind_face f1 f0 f5 c/\ c<= cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f5 c<= cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cSUC f5 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- ((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- ((((l'y L) r1) x) = y) |- ((\y. ((((l'y L) r1) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f5 cfind_face f0 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))) ==> ((\y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))) y)) = ((\y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))) y))
T c= c==> ! ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 b2 f0 b0 c< b2 csizel b1 c= cindexf f0 b0 b1 b2 * / ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 b2 f0 b0 c< b2 csizel b1 c= cindexf f0 b0 b1 b2 f1 * / ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 b2 f0 b0 c< b2 csizel b1 c= cindexf f0 b0 b1 b2 f1
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((ITER i) (next_el r1)) x)) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cITER b0 * part cnext_el f5 f1 cITER b0 * part cf_list f0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
+ ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))) = ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f6 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f7 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f5 f3 csizel cfind_face f0 f3
- |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num j)) ==> ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))))))) = ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c\/ c/\ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)) /\ ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cMEM cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c/\ cMEM cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (~ ((final_list L) r1))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) /\ ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c/\ c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ |- (((NUMERAL _0) < (sizel ((find_face L) x))) ==> ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))))
T c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- (!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x)))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 ! c==> c<= b0 f3 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((next_el r1) x)))))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x)))) = ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c= c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 cl'm f2 f0 f1 ! c==> c<= b0 cl'm f2 f0 f1 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cnext_el f0 f1 c< cl'm f2 f0 f1 csizel cfind_face f2 f1 c< cl'm f2 f0 f1 csizel cfind_face f2 f1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) i)) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) ==> ((uniq r1) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x))))))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> call / c~ c= b0 cNIL cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c/\ call / c~ c= b0 cNIL cntrans f2 f4 f5 f1 f6 c==> call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c==> call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 c==> ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f7 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f7 f3 cf_list f0 cITER cSUC b2 * part cnext_el f7 f3 b2 c= cITER cSUC b0 * part cnext_el f7 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f7 f3 cf_list f0 cITER cSUC b1 * part cnext_el f7 f3 b1 csizel cfind_face f0 f3
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) = (NUMERAL _0)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 cNUMERAL c_0 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f4 f5 f2 f6 cfind_face f0 f2 f2 cztrans f0 f4 f5 f2 f6 c==> ! c==> c<= b0 f3 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f2 b1 c~ cfinal_list f2 crtrans f2 f3 b0 b1 b2 cMEM cztrans f2 f3 b0 b1 b2 cfind_face f0 f1
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq r1) /\ ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (k < (sizel ((find_face L) x))))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c/\ cuniq f0 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f7 c< f7 csizel cfind_face f2 f1
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
+ (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302932) ==> (((int_le (int_of_num (NUMERAL _0))) _10302933) ==> ((~ ((int_le ((int_add _10302932) (int_of_num (NUMERAL (BIT1 _0))))) _10302933)) \/ ((int_le _10302932) _10302933))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le f0 f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))))), (((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) |- ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) /\ ((((indexf x) y) s) = n))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 c/\ cMEM b2 b3 c/\ cuniq b3 c/\ c= cPOWER * part cnext_el b3 b0 b1 b2 c< b0 csizel b3 c= cindexf b1 b2 b3 b0 c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c/\ c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c= cindexf f0 f2 f1 f3
+ |- ((\s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n)))) s)
T * / ! c==> c/\ cMEM f0 b0 c/\ cMEM f1 b0 c/\ cuniq b0 c/\ c= cPOWER * part cnext_el b0 b1 f0 f1 c< b1 csizel b0 c= cindexf f0 f1 b0 b1 f2
+ |- ((((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) N) r) x) |- ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 f1 f2 f3 c==> c= f6 cfind_face f0 f3 c==> c= f7 cnext_el f6 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f8 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f5 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f5 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f5 f3 cf_list f0 cITER cSUC b2 * part cnext_el f5 f3 b2 c= cITER cSUC b0 * part cnext_el f5 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f3 cf_list f0 cITER cSUC b1 * part cnext_el f5 f3 b1 csizel cfind_face f0 f3
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f3 f1 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x)))))) ==> ((\r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x)))))) r)) = ((\r. (!x'. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x)))))) r))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f0 b1 c~ cfinal_list f0 crtrans f0 f2 b0 b1 b2 cMEM cztrans f0 f2 b0 b1 b2 cfind_face f0 f1 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f0 b1 c~ cfinal_list f0 crtrans f0 f2 b0 b1 b2 cMEM cztrans f0 f2 b0 b1 b2 cfind_face f0 f1 f3 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f0 b1 c~ cfinal_list f0 crtrans f0 f2 b0 b1 b2 cMEM cztrans f0 f2 b0 b1 b2 cfind_face f0 f1 f3
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302940)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302941)) /\ (((real_le (real_of_int _10302940)) (real_of_int _10302941)) /\ ((real_le ((real_add ((real_add (real_of_int _10302941)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302940) ==> (((int_le (int_of_num (NUMERAL _0))) _10302941) ==> ((~ ((int_le _10302940) _10302941)) \/ ((int_le _10302940) ((int_add _10302941) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le f0 f1 cint_le f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- (!a. (!b. (((SUC a) <= b) ==> (a <= b))))
T c==> c<= cSUC f0 f1 c<= f0 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (x = (((((ztrans L) N) r) x) i)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((NUMERAL _0) < (sizel ((find_face L) x))) ==> (((sizel ((find_face L) x)) <= (SUC k)) ==> ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) ==> (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> cMEM cl'z f1 cntrans f1 f2 f3 f0 f4 f5 f0 f5 c==> c< cNUMERAL c_0 csizel cfind_face f1 f0 c==> c<= csizel cfind_face f1 f0 cSUC f6 c==> c==> c<= cPRE csizel cfind_face f1 f0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 cPRE csizel cfind_face f1 f0 f0 cPOWER * part cf_list f1 cPRE csizel cfind_face f1 f0 cf_list f1 f0 c==> c= cSUC cPRE csizel cfind_face f1 f0 csizel cfind_face f1 f0 c==> c<= cPRE csizel cfind_face f1 f0 f6 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f6 csizel cfind_face f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 f1 c/\ c= cfind_face f0 f1 cfind_face f0 f1 c~ cfinal_list f0 crtrans f0 f2 f3 f1 f4 cMEM cztrans f0 f2 f3 f1 f4 cfind_face f0 f1
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) ==> ((((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f6 cfind_face f0 f3 c==> c= f7 cnext_el f6 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f8 c==> c= cprev_el f5 cztrans f0 f1 f2 f3 f4 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cl'm f0 f5 f3 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f5 f3 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f5 f3 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f5 f3 cf_list f0 cITER cSUC b2 * part cnext_el f5 f3 b2 c= cITER cSUC b0 * part cnext_el f5 f3 cITER b0 * part cf_list f0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f3 cf_list f0 cITER cSUC b1 * part cnext_el f5 f3 b1 csizel cfind_face f0 f3
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> ((~ ((int_le (int_of_num a)) (int_of_num b))) \/ ((int_le (int_of_num a)) ((int_add (int_of_num b)) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_le cint_of_num f1 cint_of_num f0 cint_le cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (transform_assumption_v2 L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f5 cfind_face f0 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
+ ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- ((((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC k))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((ITER i) (next_el r1)) x)) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c= c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f2 f1 c<= csizel cfind_face f2 f1 cSUC f3 c~ c= cl'z f2 cntrans f2 f4 f5 f1 f6 f0 f1 cPOWER * part cf_list f2 csizel cfind_face f2 f1 f1 c==> ! c==> c<= b0 f3 c= cnext_el f0 cPOWER * part cnext_el f0 b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c< f3 csizel cfind_face f2 f1 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f2 f1 c<= csizel cfind_face f2 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 c~ c= cl'z f2 cntrans f2 f4 f5 f1 f6 f0 f1 cITER csizel cfind_face f2 f1 * part cf_list f2 f1 c==> ! c==> c<= b0 f3 c= cnext_el f0 cITER b0 * part cnext_el f0 f1 cITER b0 * part cf_list f2 cf_list f2 f1 c< f3 csizel cfind_face f2 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f6 cfind_face f0 f3 c= f5 cnext_el f6 f3 cMEM f5 cfind_face f0 f3 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((sizel ((find_face L) x)) <= (((l'm L) r1) x)), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((l'm L) r1) x) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- ((\r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))) r)
T * / ! c= cl'y f0 b0 b1 cPOWER * part cf_list f0 cSUC cl'm f0 b0 b1 b1 f1
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el (((((rtrans L) N) r) x) i)) (((POWER (next_el (((((rtrans L) N) r) x) i))) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c<= csizel cfind_face f0 f1 cSUC f6 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c==> ! c==> c<= b0 f6 c= cnext_el crtrans f0 f2 f3 f1 f4 cPOWER * part cnext_el crtrans f0 f2 f3 f1 f4 b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
- |- (((((((rtrans L) N) r) x) i) = r1) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1))
T c= c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
+ (w = ((next_el f) x)), (f = ((find_face L) x)) |- (((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x)) = ((((indexf w) (((((ytrans L) N) r) x) i)) f) = (((l'm L) (((((rtrans L) N) r) x) i)) x)))
T c==> c= f0 cnext_el f1 f2 c==> c= f1 cfind_face f3 f2 c= c= cindexf cnext_el cfind_face f3 f2 f2 cytrans f3 f4 f5 f2 f6 cfind_face f3 f2 cl'm f3 crtrans f3 f4 f5 f2 f6 f2 c= cindexf f0 cytrans f3 f4 f5 f2 f6 f1 cl'm f3 crtrans f3 f4 f5 f2 f6 f2
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) ==> (k < (sizel ((find_face L) x)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c= c==> c/\ cMEM cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f4 c~ c= cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 cPOWER * part cf_list f0 b0 f4 c< f6 csizel cfind_face f0 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c~ cfinal_list f0 f1 c/\ cMEM cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f4 c~ c= cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 cPOWER * part cf_list f0 b0 f4 c< f6 csizel cfind_face f0 f4
- |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((l'y L) r1) x) = (((l'y L) r1) x)) = ((\y. ((((l'y L) r1) x) = y)) (((l'y L) r1) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f3 cfind_face f2 f1 c==> c= crtrans f2 f4 f5 f1 f6 f0 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f4 f5 f1 f6 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f4 f5 f1 f6 c==> cmarked_list f2 f4 f5 f1 c==> cmarked_list f2 cntrans f2 f4 f5 f1 f6 f0 f1 c==> c/\ cuniq cflatten cntrans f2 f4 f5 f1 f6 c/\ call / c~ c= b0 cNIL cntrans f2 f4 f5 f1 f6 c/\ call * part cf_last f2 cntrans f2 f4 f5 f1 f6 c/\ call * part cloop_list f2 cntrans f2 f4 f5 f1 f6 ! c==> cMEM b0 cflatten cntrans f2 f4 f5 f1 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f4 f5 f1 f6 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) |- (((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((!x'. (((MEM x') ((find_face L) x)) ==> (~ (((find_face L) x) = NIL)))) ==> ((\x'. (((MEM x') ((find_face L) x)) ==> (~ (((find_face L) x) = NIL)))) (((((ytrans L) N) r) x) i))) = ((\x'. (((MEM x') ((find_face L) x)) ==> (~ (((find_face L) x) = NIL)))) (((((ytrans L) N) r) x) i)))
T c= c==> ! c==> cMEM b0 cfind_face f0 f1 c~ c= cfind_face f0 f1 cNIL * / c==> cMEM b0 cfind_face f0 f1 c~ c= cfind_face f0 f1 cNIL cytrans f0 f2 f3 f1 f4 * / c==> cMEM b0 cfind_face f0 f1 c~ c= cfind_face f0 f1 cNIL cytrans f0 f2 f3 f1 f4
- |- (((!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) ==> ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)) = ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r))
T c= c==> ! ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cMEM cztrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- ((\y. (!s. (!n. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))) y)
T * / ! ! c==> c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cuniq b1 c/\ c= cPOWER * part cnext_el b1 b2 f0 b0 c< b2 csizel b1 c= cindexf f0 b0 b1 b2 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> (((int_le (int_of_num a)) (int_of_num b)) \/ ((int_lt (int_of_num b)) (int_of_num a))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> (((int_le (int_of_num a)) (int_of_num b)) \/ ((int_lt (int_of_num b)) (int_of_num a)))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ cint_le cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f1 cint_of_num f0
+ |- ((\n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n))))) n)
T * / ! c= * * part cPOWER b1 cSUC b0 * * part co b1 * * part cPOWER b1 b0 f0
+ (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((!i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f))) ==> ((\i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f))) i)) = ((\i. (((good_list L) /\ (((((marked_list L) N) r) x) /\ (f = ((find_face L) x)))) ==> ((MEM (((((ytrans L) N) r) x) i)) f))) i))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c= f4 cfind_face f0 f3 cMEM cytrans f0 f1 f2 f3 b0 f4 * / c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c= f4 cfind_face f0 f3 cMEM cytrans f0 f1 f2 f3 b0 f4 f5 * / c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 c= f4 cfind_face f0 f3 cMEM cytrans f0 f1 f2 f3 b0 f4 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((((rtrans L) N) r) x) i) = r1) /\ (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((!a. (!b. ((~ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ ((int_le (int_of_num a)) (int_of_num b))))) = (!a. (!b. (((SUC a) <= b) ==> (a <= b)))))
T c= ! ! c\/ c~ cint_le cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num b1 cint_le cint_of_num b0 cint_of_num b1 ! ! c==> c<= cSUC b0 b1 c<= b0 b1
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) |- ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f0 f1 cf_list f2 cITER cSUC b2 * part cnext_el f0 f1 b2 c= cITER cSUC b0 * part cnext_el f0 f1 cITER b0 * part cf_list f2 cf_list f2 f1 c==> c<= f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 c= cITER cSUC f3 * part cnext_el f0 f1 cITER f3 * part cf_list f2 cf_list f2 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= cl'y f0 f7 f3 b1 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (SND (((POWER ((transform_list L) x)) i) (N , r)))) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 f3
+ |- (((!b. (((sizel ((find_face L) x)) <= b) ==> ((sizel ((find_face L) x)) <= (SUC b)))) ==> ((\b. (((sizel ((find_face L) x)) <= b) ==> ((sizel ((find_face L) x)) <= (SUC b)))) k)) = ((\b. (((sizel ((find_face L) x)) <= b) ==> ((sizel ((find_face L) x)) <= (SUC b)))) k))
T c= c==> ! c==> c<= csizel cfind_face f0 f1 b0 c<= csizel cfind_face f0 f1 cSUC b0 * / c==> c<= csizel cfind_face f0 f1 b0 c<= csizel cfind_face f0 f1 cSUC b0 f2 * / c==> c<= csizel cfind_face f0 f1 b0 c<= csizel cfind_face f0 f1 cSUC b0 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\x'. (((min_num (GSPEC (\GEN%PVAR%8666. (?m. (((SETSPEC GEN%PVAR%8666) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x') = ((f_list L) (((POWER (next_el r1)) (SUC m)) x'))))) m))))) = (((l'm L) r1) x)) ==> (!i. ((i <= (((l'm L) r1) x)) ==> ((((POWER (next_el r1)) (SUC i)) x') = (((POWER (f_list L)) i) ((next_el r1) x'))))))) x)
T * / c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 b0 cf_list f1 cPOWER * part cnext_el f0 cSUC b2 b0 b2 cl'm f1 f0 f2 ! c==> c<= b1 cl'm f1 f0 f2 c= cPOWER * part cnext_el f0 cSUC b1 b0 cPOWER * part cf_list f1 b1 cnext_el f0 b0 f2
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!L. (((uniq L) /\ ((MEM x) L)) ==> ((((POWER (next_el L)) (sizel L)) x) = x))) ==> ((\L. (((uniq L) /\ ((MEM x) L)) ==> ((((POWER (next_el L)) (sizel L)) x) = x))) ((find_face L) x))) = ((\L. (((uniq L) /\ ((MEM x) L)) ==> ((((POWER (next_el L)) (sizel L)) x) = x))) ((find_face L) x)))
T c= c==> ! c==> c/\ cuniq b0 cMEM f0 b0 c= cPOWER * part cnext_el b0 csizel b0 f0 f0 * / c==> c/\ cuniq b0 cMEM f0 b0 c= cPOWER * part cnext_el b0 csizel b0 f0 f0 cfind_face f1 f0 * / c==> c/\ cuniq b0 cMEM f0 b0 c= cPOWER * part cnext_el b0 csizel b0 f0 f0 cfind_face f1 f0
+ |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> (~ (((find_face L) x) = NIL)))
T c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c~ c= cfind_face f0 f3 cNIL
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (k < (sizel ((find_face L) x)))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f6 c==> c==> c<= cPRE csizel cfind_face f0 f3 f6 c= cnext_el f5 cPOWER * part cnext_el f5 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f6 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 c< f6 csizel cfind_face f0 f3
+ |- (((!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ==> ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) s)) = ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 f0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 f0
- |- (((!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))) ==> ((\r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))) r)) = ((\r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))) r))
T c= c==> ! ! c==> c~ c==> c= f0 cztrans f1 b1 b0 f0 f2 c==> c~ c= cztrans f1 b1 b0 f0 f2 f0 c< f3 csizel cfind_face f1 f0 cF * / ! c==> c~ c==> c= f0 cztrans f1 b1 b0 f0 f2 c==> c~ c= cztrans f1 b1 b0 f0 f2 f0 c< f3 csizel cfind_face f1 f0 cF f4 * / ! c==> c~ c==> c= f0 cztrans f1 b1 b0 f0 f2 c==> c~ c= cztrans f1 b1 b0 f0 f2 f0 c< f3 csizel cfind_face f1 f0 cF f4
+ (f = ((find_face L) x)) |- (((!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((!L'. (!N. (!r. (!x'. (!d. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((f = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) f)))))))) ==> ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c= f0 cfind_face f1 f2 c= c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f1 f2 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f1 f2 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f4 cSUC b0 f2 cPOWER * part cf_list f1 b0 cf_list f1 f2 c< f3 csizel cfind_face f1 f2 c==> ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= f0 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b5 cMEM cztrans b0 b1 b2 b3 b5 f0 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f4 cSUC b0 f2 cPOWER * part cf_list f1 b0 cf_list f1 f2 c< f3 csizel cfind_face f1 f2
+ (x = (((((ztrans L) N) r) x) i)) |- (((PRE (sizel ((find_face L) x))) <= k) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) ==> (((((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x) = x) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c<= cPRE csizel cfind_face f1 f0 f5 c==> c= cPOWER * part cf_list f1 csizel cfind_face f1 f0 f0 cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 c==> c= cPOWER * part cnext_el cfind_face f1 f0 csizel cfind_face f1 f0 f0 f0 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
- |- ((_10302962 = _10302964) ==> ((~ (_10302963 = _10302965)) \/ ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ |- ((\L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))))))) L)
T * / ! ! c= cl'm b0 b1 b2 cmin_num * part cGSPEC / c? / cSETSPEC b3 c~ c= cITER cSUC cSUC b4 * part cnext_el b1 b2 cf_list b0 cITER cSUC b4 * part cnext_el b1 b2 b4 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < (sizel ((find_face L) x)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((l'm L) r1) x) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c\/ c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x)) |- (((~ ((((((ztrans L) N) r) x) i) = (((POWER (next_el ((find_face L) x))) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))) = ((~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> (k < (sizel ((find_face L) x)))))
T c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c= c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cnext_el cfind_face f0 f1 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1 c==> c~ c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 c< f5 csizel cfind_face f0 f1
+ ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x)))) = ((((SUC (PRE (sizel ((find_face L) x)))) <= k) ==> ((PRE (sizel ((find_face L) x))) <= k)) ==> (k < (sizel ((find_face L) x)))))
T c==> c= cSUC cPRE csizel cfind_face f0 f1 csizel cfind_face f0 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 f3 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 c= c==> c<= cPRE csizel cfind_face f0 f1 f3 c< f3 csizel cfind_face f0 f1 c==> c==> c<= cSUC cPRE csizel cfind_face f0 f1 f3 c<= cPRE csizel cfind_face f0 f1 f3 c< f3 csizel cfind_face f0 f1
+ |- (((!a. ((a <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < a))) ==> ((\a. ((a <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < a))) (sizel ((find_face L) x)))) = ((\a. ((a <= (((l'm L) r1) x)) \/ ((((l'm L) r1) x) < a))) (sizel ((find_face L) x))))
T c= c==> ! c\/ c<= b0 cl'm f0 f1 f2 c< cl'm f0 f1 f2 b0 * / c\/ c<= b0 cl'm f0 f1 f2 c< cl'm f0 f1 f2 b0 csizel cfind_face f0 f2 * / c\/ c<= b0 cl'm f0 f1 f2 c< cl'm f0 f1 f2 b0 csizel cfind_face f0 f2
+ ((((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) ==> F), ((((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((final_list L) r1) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cfinal_list f0 f5 cF
+ |- ((\a. (!b. (((SUC a) <= b) ==> (a <= b)))) (PRE (sizel ((find_face L) x))))
T * / ! c==> c<= cSUC b0 b1 c<= b0 b1 cPRE csizel cfind_face f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((((NUMERAL _0) < (sizel ((find_face L) x))) ==> ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x)))) ==> (k < (sizel ((find_face L) x))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f6 c==> c==> c<= cPRE csizel cfind_face f0 f3 f6 c= cnext_el f5 cPOWER * part cnext_el f5 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f6 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 c==> c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c< f6 csizel cfind_face f0 f3
+ |- (((~ ((int_le (int_of_num a)) (int_of_num b))) \/ ((int_le (int_of_num a)) ((int_add (int_of_num b)) (int_of_num (NUMERAL (BIT1 _0)))))) = T)
T c= c\/ c~ cint_le cint_of_num f0 cint_of_num f1 cint_le cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)
T * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) |- ((\i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) i)
T c==> ! c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 * / c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 f4
+ |- (((!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) ==> ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) (((((ntrans L) N) r) x) i))) = ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) (((((ntrans L) N) r) x) i)))
T c= c==> ! ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 cntrans f0 f1 f2 f3 f4 * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 cntrans f0 f1 f2 f3 f4
+ |- ((!b. (!c. (((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num b))) \/ (~ ((int_le (int_of_num b)) (int_of_num c)))) \/ (((int_le (int_of_num a)) (int_of_num c)) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num c)) (int_of_num (NUMERAL (BIT1 _0))))))))) = T)
T c= ! ! c\/ c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num b0 c~ cint_le cint_of_num b0 cint_of_num b1 c/\ cint_le cint_of_num f0 cint_of_num b1 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num b1 cint_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_of_num a) = (int_of_num (NUMERAL _0))) \/ ((int_lt (int_of_num (NUMERAL _0))) (int_of_num a)))) = (((int_of_num a) = (int_of_num (NUMERAL _0))) \/ ((int_lt (int_of_num (NUMERAL _0))) (int_of_num a))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((\y. ((((l'y L) r1) x) = y)) y) |- (((\y. ((((l'y L) r1) x) = y)) y) /\ ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cl'y f0 f7 f3 b0 f8 c/\ * / c= cl'y f0 f7 f3 b0 f8 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (!i'. ((i' <= k) ==> (((next_el r1) (((POWER (next_el r1)) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) |- (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x))))
T c==> ! c==> c<= b0 f0 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f3 b0 cf_list f3 f2 c==> c<= cPRE csizel cfind_face f3 f2 f0 c= cnext_el f1 cPOWER * part cnext_el f1 cPRE csizel cfind_face f3 f2 f2 cPOWER * part cf_list f3 cPRE csizel cfind_face f3 f2 cf_list f3 f2
+ ((((((rtrans L) N) r) x) i) = r1) |- (((~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i'. ((i' <= k) ==> (((next_el (((((rtrans L) N) r) x) i)) (((POWER (next_el (((((rtrans L) N) r) x) i))) i') x)) = (((POWER (f_list L)) i') ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))) = ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el crtrans f0 f1 f2 f3 f4 cPOWER * part cnext_el crtrans f0 f1 f2 f3 f4 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3 c==> c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> ! c==> c<= b0 f6 c= cnext_el f5 cPOWER * part cnext_el f5 b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< f6 csizel cfind_face f0 f3
+ |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- ((\d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) d)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 * / c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 f5
+ |- ((\s. (((NUMERAL _0) < (sizel s)) = (~ (s = NIL)))) s)
T * / c= c< cNUMERAL c_0 csizel b0 c~ c= b0 cNIL f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- |- ((~ (_10302972 = _10302977)) \/ ((~ (_10302973 = _10302978)) \/ ((~ (_10302974 = _10302979)) \/ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
+ |- (((ITER n) f) = ((POWER f) n))
T c= * * part cITER f0 f1 * * part cPOWER f1 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (f = ((find_face L) x)), (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) (((((rtrans L) N) r) x) i)) x))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= f6 cfind_face f0 f3 c==> c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 crtrans f0 f1 f2 f3 f4 f3
- |- ((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) = ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c= c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) |- (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) = T)
T c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
+ (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
+ |- (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z))
T c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((NUMERAL _0) < (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) <= k) /\ ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cSUC cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f6 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c< cNUMERAL c_0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c/\ c<= cPRE cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f6 c<= cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 cSUC f6 c==> c= cPOWER * part cf_list f0 cindexf f2 cztrans f0 f3 f4 f2 f5 cfind_face f0 f2 f2 cztrans f0 f3 f4 f2 f5 c==> ! c==> c<= b0 f6 c= cnext_el f1 cPOWER * part cnext_el f1 b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f6 csizel cfind_face f0 f2
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) r1) ==> (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> cMEM f3 f1 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- ((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) |- (((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) /\ (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))
T c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3 c/\ * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((l'm L) r1) x) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 b0 cMEM cztrans f2 f3 f4 f5 b0 cfind_face f0 f1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302932)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302933)) /\ (((real_le ((real_add (real_of_int _10302932)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933)) /\ ((real_le ((real_add (real_of_int _10302933)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932)))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- (((NUMERAL (BIT1 _0)) <= (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((SUC (PRE (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)))) = (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))))
T c==> c<= cNUMERAL cBIT1 c_0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c= cSUC cPRE cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c~ cfinal_list f2 f0 c==> cuniq cflatten cntrans f2 f3 f4 f1 f5 c==> cuniq clist_of_darts f2 c==> cuniq cfind_face f2 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> ctransform_assumption_v2 f2 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c= f6 cfind_face f2 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c/\ cuniq cflatten cntrans f2 f3 f4 f1 f5 c/\ call / c~ c= b0 cNIL cntrans f2 f3 f4 f1 f5 c/\ call * part cf_last f2 cntrans f2 f3 f4 f1 f5 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f1 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f1 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f1 f5 c==> c<= csizel cfind_face f2 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 c==> cMEM f1 f0 c==> cMEM f1 clist_of_darts f2 c==> cMEM cytrans f2 f3 f4 f1 f5 cfind_face f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cmarked_list f2 f3 f4 f1 c==> cmarked_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f3 f1 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((((((ztrans L) N) r) x) i) = x)), (x = (((((ztrans L) N) r) x) i)) |- F
T c==> c~ c= cztrans f0 f1 f2 f3 f4 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((sizel ((find_face L) x)) <= (((l'm L) r1) x)), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (((l'm L) r1) x))) x) = (((POWER (next_el ((find_face L) x))) (SUC (((l'm L) r1) x))) x))) ==> ((((l'm L) r1) x) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c<= csizel cfind_face f0 f3 cl'm f0 f7 f3 c==> cMEM f3 f7 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cl'm f0 f7 f3 f3 cPOWER * part cnext_el cfind_face f0 f3 cSUC cl'm f0 f7 f3 f3 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) |- (((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z))) = (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c= c==> c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
+ |- ((((((MEM x) ((find_face L) x)) /\ ((MEM (((((ztrans L) N) r) x) i)) ((find_face L) x))) ==> ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) < (sizel ((find_face L) x)))) ==> (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))) = (((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) ==> ((!i. ((i <= k) ==> (((next_el r1) (((POWER (next_el r1)) i) x)) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c==> c/\ cMEM f0 cfind_face f1 f0 cMEM cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 c< cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0 c==> c= cPOWER * part cf_list f1 cindexf f0 cztrans f1 f2 f3 f0 f4 cfind_face f1 f0 f0 cztrans f1 f2 f3 f0 f4 c==> ! c==> c<= b0 f5 c= cnext_el f6 cPOWER * part cnext_el f6 b0 f0 cPOWER * part cf_list f1 b0 cf_list f1 f0 c< f5 csizel cfind_face f1 f0
+ (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- (((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))) = (k < (sizel ((find_face L) x))))
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c= c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f0 cSUC b0 f1 cPOWER * part cf_list f2 b0 cf_list f2 f1 c< f3 csizel cfind_face f2 f1 c< f3 csizel cfind_face f2 f1
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((?y. ((((l'y L) r1) x) = y)) ==> ((((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) i)) ((find_face L) x)) = (((l'm L) r1) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= cl'y f0 f7 f3 b0 c= cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 cl'm f0 f7 f3
+ (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))))) N)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f2 b2 c~ cfinal_list f2 crtrans f2 b0 b1 b2 b3 cMEM cztrans f2 b0 b1 b2 b3 cfind_face f0 f1 f3
+ (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x))))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 f3 c==> c= f4 cfind_face f0 f1 c==> c= crtrans f0 f5 f6 f1 f7 f2 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f2 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f2 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f1 f7 cfind_face f0 f1 c==> cmarked_list f0 f5 f6 f1 c==> cmarked_list f0 cntrans f0 f5 f6 f1 f7 f2 f1 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f2 cSUC b0 f1 cPOWER * part cf_list f0 b0 cf_list f0 f1 c< f3 csizel cfind_face f0 f1
+ (uniq r1), (((next_el r1) x) = ((f_list L) x)), ((MEM x) r1) |- (((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))) = (((((MEM x) r1) /\ (uniq r1)) ==> (((next_el r1) x) = ((next_el ((rotate_to r1) x)) x))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> cuniq f0 c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cMEM f1 f0 c= c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1 c==> c==> c/\ cMEM f1 f0 cuniq f0 c= cnext_el f0 f1 cnext_el crotate_to f0 f1 f1 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 csizel cfind_face f2 f1
+ (((ITER n) f) = ((POWER f) n)) |- (((POWER f) n) = ((ITER n) f))
T c==> c= * * part cITER f0 f1 * * part cPOWER f1 f0 c= * * part cPOWER f1 f0 * * part cITER f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((l'y L) r1) x) = y) /\ ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x)))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cnext_el f6 f3 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c/\ c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
+ (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c==> c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
+ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq r1), (uniq (flatten (((((ntrans L) N) r) x) i))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((all (f_last L)) (((((ntrans L) N) r) x) i)), ((all (loop_list L)) (((((ntrans L) N) r) x) i)), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) /\ ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b2 f3 b2 c= cPOWER * part cnext_el f5 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c==> c~ cfinal_list f0 f5 c==> cuniq f5 c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f6 c==> c= f7 cfind_face f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 f6 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))
T c==> c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
- |- ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))) w)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= f0 cfind_face b1 b4 c= b0 cnext_el f0 b4 cMEM b0 cfind_face b1 b4 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) |- (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) = T)
T c==> call part cuniq cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= call part cuniq cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) |- (((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) /\ (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c/\ * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
- |- (((MEM x) ((CONS y) NIL)) = (x = y))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) |- ((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) /\ (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c/\ c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- ((((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))) /\ (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x))))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c/\ c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
- |- (((!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ==> ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)) = ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2))
T c= c==> ! c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((((marked_list L) N) r) x) |- ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 cfind_face f0 f3 c==> cmarked_list f0 f1 f2 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) = ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))
T c= c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
- |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10302936) ==> (((int_le (int_of_num (NUMERAL _0))) _10302937) ==> ((((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0))))))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (((!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) ==> ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)) = ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2))
T c= c==> ! c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= f0 cfind_face b1 b4 c= b0 cnext_el f0 b4 cMEM b0 cfind_face b1 b4 cT
- (~ F), (~ ((((((ztrans L) N) r) x) i) = x)), (x = (((((ztrans L) N) r) x) i)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= cztrans f0 f1 f2 f3 f4 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c/\ c~ cF cF
- (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), ((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) |- (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))) /\ ((!i. ((i <= k) ==> (((next_el r1) (((ITER i) (next_el r1)) x)) = (((ITER i) (f_list L)) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> c= f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 c==> c<= csizel cfind_face f0 f1 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 c==> cMEM f1 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 f5 c==> cMEM cytrans f0 f2 f3 f1 f4 cfind_face f0 f1 c/\ c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 c==> ! c==> c<= b0 f6 c= cnext_el f5 cITER b0 * part cnext_el f5 f1 cITER b0 * part cf_list f0 cf_list f0 f1 c< f6 csizel cfind_face f0 f1
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))) ==> ((\i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))) i)) = ((\i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))) i))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 b0 cMEM cztrans f2 f3 f4 f5 b0 cfind_face f0 f1 * / c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 b0 cMEM cztrans f2 f3 f4 f5 b0 cfind_face f0 f1 f6 * / c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 b0 cMEM cztrans f2 f3 f4 f5 b0 cfind_face f0 f1 f6
- |- ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)
T * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (~ (x = (((((ztrans L) N) r) x) i))), (x = (((((ztrans L) N) r) x) i)) |- ((~ (x = (((((ztrans L) N) r) x) i))) /\ (x = (((((ztrans L) N) r) x) i)))
T c==> c~ c= f0 cztrans f1 f2 f3 f0 f4 c==> c= f0 cztrans f1 f2 f3 f0 f4 c/\ c~ c= f0 cztrans f1 f2 f3 f0 f4 c= f0 cztrans f1 f2 f3 f0 f4
- |- (((!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) ==> ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)) = ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f))
T c= c==> ! ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- |- ((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) ==> (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) |- ((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) (f_list L)) x)))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)) |- ((((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) (f_list L)) x)))) /\ (k < (sizel ((find_face L) x))))
T c==> c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 * part cf_list f0 f1 c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC f6 c/\ c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 * part cf_list f0 f1 c< f6 csizel cfind_face f0 f1
- |- (((!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) ==> ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)) = ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N))
T c= c==> ! ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- |- (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_10302962 = _10302964) |- ((_10302962 = _10302964) /\ ((~ (_10302963 = _10302965)) \/ ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302974 = _10302979) /\ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f2 f4 f0 f8 f6 cztrans f3 f5 f1 f9 f7
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k))) = T)
T c= c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 cT
- ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) |- (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) = T)
T c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c= call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))) i)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 b0 cMEM cztrans f2 f3 f4 f5 b0 cfind_face f0 f1 f6
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- (((((marked_list L) N) r) x) ==> ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f5 cfind_face f0 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- ((~ (_10302962 = _10302964)) \/ ((~ (_10302963 = _10302965)) \/ ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) ==> ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)) = ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r))
T c= c==> ! ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- (_10302976 = _10302981), (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302976 = _10302981) /\ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c= cztrans f4 f6 f2 f8 f0 cztrans f5 f7 f3 f9 f1
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- (~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) |- F
T c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)))
T c==> c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))), (~ ((final_list L) (((((rtrans L) N) r) x) i))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (w = ((next_el f) x)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (((l'm L) r1) x)) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((sizel ((find_face L) x)) <= (((l'm L) r1) x)), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) /\ ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 f2 cf_list f0 cITER cSUC b2 * part cnext_el f1 f2 b2 c= cITER cSUC b0 * part cnext_el f1 f2 cITER b0 * part cf_list f0 cf_list f0 f2 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f2 f5 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 cnext_el f7 f2 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f8 c==> c= cf_list f0 cPOWER * part cf_list f0 cl'm f0 f1 f2 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cl'm f0 f1 f2 f2 c==> c= cl'y f0 f1 f2 f9 c==> c= f7 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> c<= csizel cfind_face f0 f2 cl'm f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f1 f2 cf_list f0 cITER cSUC b2 * part cnext_el f1 f2 b2 c= cITER cSUC b0 * part cnext_el f1 f2 cITER b0 * part cf_list f0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f2 cf_list f0 cITER cSUC b1 * part cnext_el f1 f2 b1 csizel cfind_face f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\y. ((((l'y L) r1) x) = y)) y) |- ((((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y))) = (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((\N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) N)
T * / c==> c~ c==> c= f0 cztrans f1 b0 f2 f0 f3 c==> c~ c= cztrans f1 b0 f2 f0 f3 f0 c< f4 csizel cfind_face f1 f0 cF f5
- (_10302962 = _10302964) |- ((_10302963 = _10302965) ==> ((_10302964 < _10302965) \/ (~ (_10302962 < _10302963))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) = ((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k))
T c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3
- |- (((!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))))) ==> ((\L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))))) L)) = ((\L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))))) L))
T c= c==> ! ! ! ! ! c==> c~ c==> c= f0 cztrans b0 b4 b3 f0 b2 c==> c~ c= cztrans b0 b4 b3 f0 b2 f0 c< b1 csizel cfind_face b0 f0 cF * / ! ! ! ! c==> c~ c==> c= f0 cztrans b0 b4 b3 f0 b2 c==> c~ c= cztrans b0 b4 b3 f0 b2 f0 c< b1 csizel cfind_face b0 f0 cF f1 * / ! ! ! ! c==> c~ c==> c= f0 cztrans b0 b4 b3 f0 b2 c==> c~ c= cztrans b0 b4 b3 f0 b2 f0 c< b1 csizel cfind_face b0 f0 cF f1
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))))) ==> ((\N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))))) N)) = ((\N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))))) N))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f2 b2 c~ cfinal_list f2 crtrans f2 b0 b1 b2 b3 cMEM cztrans f2 b0 b1 b2 b3 cfind_face f0 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f2 b2 c~ cfinal_list f2 crtrans f2 b0 b1 b2 b3 cMEM cztrans f2 b0 b1 b2 b3 cfind_face f0 f1 f3 * / ! ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c/\ c= cfind_face f0 f1 cfind_face f2 b2 c~ cfinal_list f2 crtrans f2 b0 b1 b2 b3 cMEM cztrans f2 b0 b1 b2 b3 cfind_face f0 f1 f3
- ((((POWER (f_list L)) (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), ((((((rtrans L) N) r) x) i) = r1), (((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x))) (f_list L)) x)))), ((((indexf x) (((((ztrans L) N) r) x) i)) ((find_face L) x)) <= (SUC k)) |- (k < (sizel ((find_face L) x)))
T c==> c= cPOWER * part cf_list f0 cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 f1 cztrans f0 f2 f3 f1 f4 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f5 cSUC cSUC b1 f1 cf_list f0 cPOWER * part cnext_el f5 cSUC b1 f1 b1 f6 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f5 f1 cf_list f0 cITER cSUC b1 * part cnext_el f5 f1 b1 c~ c= cl'z f0 cntrans f0 f2 f3 f1 f4 f5 f1 cITER cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 * part cf_list f0 f1 c==> c<= cindexf f1 cztrans f0 f2 f3 f1 f4 cfind_face f0 f1 cSUC f6 c< f6 csizel cfind_face f0 f1
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302946))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)
T * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x))))) |- (((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))) ==> ((((ITER (SUC i)) (next_el r1)) x) = (((ITER i) (f_list L)) ((f_list L) x)))) = T)
T c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cITER cSUC cSUC b2 * part cnext_el f0 f1 cf_list f2 cITER cSUC b2 * part cnext_el f0 f1 b2 c= cITER cSUC b0 * part cnext_el f0 f1 cITER b0 * part cf_list f2 cf_list f2 f1 c= c==> c<= f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f0 f1 cf_list f2 cITER cSUC b1 * part cnext_el f0 f1 b1 c= cITER cSUC f3 * part cnext_el f0 f1 cITER f3 * part cf_list f2 cf_list f2 f1 cT
- ((((((rtrans L) N) r) x) i) = r1) |- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)
T * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) |- (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) /\ ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c/\ c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) |- ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))
T c==> c= cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1 cztrans f0 f2 f3 f1 f4 c= cztrans f0 f2 f3 f1 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f1 f1
- |- ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)
T * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (x = (((((ztrans L) N) r) x) i)) |- ((x = (((((ztrans L) N) r) x) i)) = T)
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c= c= f0 cztrans f1 f2 f3 f0 f4 cT
- |- (((!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) ==> ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)) = ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L))
T c= c==> ! ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) r1) /\ (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cMEM f3 f1 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c/\ cMEM f3 f1 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (_10302972 = _10302977) |- ((_10302973 = _10302978) ==> ((~ (_10302974 = _10302979)) \/ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
- (~ ((((((ztrans L) N) r) x) i) = x)), (x = (((((ztrans L) N) r) x) i)) |- ((~ ((((((ztrans L) N) r) x) i) = x)) /\ ((((((ztrans L) N) r) x) i) = x))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c/\ c~ c= cztrans f0 f1 f2 f3 f4 f3 c= cztrans f0 f1 f2 f3 f4 f3
- ((((((rtrans L) N) r) x) i) = r1) |- (((((((rtrans L) N) r) x) i) = r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> (((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cfind_face f0 f3 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 f4 f5 f3 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> cMEM f1 cntrans f0 f4 f5 f3 f6 c==> cMEM f3 f1 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f3 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c==> cs_flag_list f0 cntrans f0 f4 f5 f3 f6 f1 f3 c==> c= crtrans f0 f4 f5 f3 f6 f1 c==> c= cl'y f0 f1 f3 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f3 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c==> cMEM cytrans f0 f4 f5 f3 f6 cfind_face f0 f3 c==> cuniq cfind_face f0 f3 c==> c<= csizel cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 cnext_el cfind_face f0 f3 cPOWER * part cnext_el cfind_face f0 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 f3 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f3 b2 c= cPOWER * part cnext_el f1 cSUC b0 f3 cPOWER * part cf_list f0 b0 cf_list f0 f3 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f3 b1 csizel cfind_face f0 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- (_10302967 = _10302969), (_10302966 = _10302968) |- ((_10302967 = _10302969) /\ (((find_face _10302966) _10302967) = ((find_face _10302968) _10302969)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cfind_face f2 f0 cfind_face f3 f1
- |- ((!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) = T)
T c= ! c==> c= f0 cztrans f1 b0 f2 f0 f3 c==> c~ c= cztrans f1 b0 f2 f0 f3 f0 c< f4 csizel cfind_face f1 f0 cT
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)
T * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- (((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) ==> (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))) = (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))
T c= c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- ((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))) |- (((((NUMERAL _0) < (sizel ((find_face L) x))) /\ ((sizel ((find_face L) x)) <= (SUC (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r1)) x) = ((f_list L) (((ITER (SUC m)) (next_el r1)) x))))) m)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((ITER (sizel ((find_face L) x))) (f_list L)) x)))) = T)
T c==> c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f2 f1 cf_list f0 cITER cSUC b1 * part cnext_el f2 f1 b1 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f2 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 c= c==> c/\ c< cNUMERAL c_0 csizel cfind_face f0 f1 c<= csizel cfind_face f0 f1 cSUC cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f2 f1 cf_list f0 cITER cSUC b1 * part cnext_el f2 f1 b1 c~ c= cl'z f0 cntrans f0 f3 f4 f1 f5 f2 f1 cITER csizel cfind_face f0 f1 * part cf_list f0 f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 f5 c/\ c= cfind_face f0 f1 cfind_face f2 f5 c~ cfinal_list f2 crtrans f2 f3 f4 f5 f6 cMEM cztrans f2 f3 f4 f5 f6 cfind_face f0 f1
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))) = T)
T c= c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cT
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((_10302970 = _10302971) ==> ((sizel _10302970) = (sizel _10302971)))
T c==> c= f0 f1 c= csizel f0 csizel f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) |- (((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x)) = F)
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c= c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cF
- ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) = T)
T c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 c= cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))) r)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / ! ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 b0 b1 c/\ c= cfind_face f0 f1 cfind_face f2 b1 c~ cfinal_list f2 crtrans f2 f3 b0 b1 b2 cMEM cztrans f2 f3 b0 b1 b2 cfind_face f0 f1 f4
- (x = (((((ztrans L) N) r) x) i)) |- ((~ ((((((ztrans L) N) r) x) i) = x)) ==> ((((((ztrans L) N) r) x) i) = x))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c= cztrans f1 f2 f3 f0 f4 f0
- (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (f = ((find_face L) x)) |- ((\x'. (!d. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ ((f = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i)))))))) ==> ((MEM (((((ztrans L) N) r) x') i)) f))))) = (\x'. (!i. ((((((marked_list L) N) r) x') /\ ((((find_face L) x) = ((find_face L) x')) /\ (~ ((final_list L) (((((rtrans L) N) r) x') i))))) ==> ((MEM (((((ztrans L) N) r) x') i)) ((find_face L) x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f1 cfind_face f0 f2 c= / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f4 b0 c/\ c= f1 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f3 f4 b0 b2 cMEM cztrans f0 f3 f4 b0 b2 f1 / ! c==> c/\ cmarked_list f0 f3 f4 b0 c/\ c= cfind_face f0 f2 cfind_face f0 b0 c~ cfinal_list f0 crtrans f0 f3 f4 b0 b1 cMEM cztrans f0 f3 f4 b0 b1 cfind_face f0 f2
- (_10302966 = _10302968) |- ((_10302966 = _10302968) /\ ((~ (_10302967 = _10302969)) \/ (((find_face _10302966) _10302967) = ((find_face _10302968) _10302969))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((SUC j) < ((NUMERAL (BIT1 _0)) + (a + (NUMERAL (BIT1 _0))))) = (j < (SUC a)))
T c= c< cSUC f0 c+ cNUMERAL cBIT1 c_0 c+ f1 cNUMERAL cBIT1 c_0 c< f0 cSUC f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F), (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) |- ((((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) /\ ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c/\ c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) |- (~ ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c~ c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!N. (P N)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((next_el r1) x) = ((f_list L) x)) /\ (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f2 f4 f0 f8 f6 cztrans f3 f5 f1 f9 f7
- ((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- |- ((!k. (!i. (!r. (!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))))) = T)
T c= ! ! ! ! c==> c= f0 cztrans f1 b3 b2 f0 b1 c==> c~ c= cztrans f1 b3 b2 f0 b1 f0 c< b0 csizel cfind_face f1 f0 cT
- |- ((\x. (!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))))) x)
T * / ! ! ! ! ! c==> c~ c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 cF f0
- |- (((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((PRE (sizel ((find_face L) x))) <= k) |- (((PRE (sizel ((find_face L) x))) <= k) = T)
T c==> c<= cPRE csizel cfind_face f0 f1 f2 c= c<= cPRE csizel cfind_face f0 f1 f2 cT
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) |- ((((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k))) = (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))
T c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3 c= c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- |- (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302976 = _10302981) ==> ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f2 f4 f0 f8 f6 cztrans f3 f5 f1 f9 f7
- |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302936) ==> (((int_le (int_of_num (NUMERAL _0))) _10302937) ==> ((((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add _10302937) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302936) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt _10302937) ((int_add _10302936) (int_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt f1 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) x) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))) ==> ((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))) = ((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k))))
T c= c==> ! c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b3 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b3 f1 b3 b1 b0 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b3 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b3 f1 b3 b1 c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((\i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) i')
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 f6
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302948)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302949)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302948))) (real_of_int _10302949))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302948)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302949))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((all (loop_list L)) (((((ntrans L) N) r) x) i)) |- (((all (loop_list L)) (((((ntrans L) N) r) x) i)) = T)
T c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c= call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq ((find_face L) x)) /\ (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))))))
T c\/ c/\ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0
- (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302973 = _10302978) /\ ((~ (_10302974 = _10302979)) \/ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (_10302966 = _10302968) |- ((_10302967 = _10302969) ==> (((find_face _10302966) _10302967) = ((find_face _10302968) _10302969)))
T c==> c= f0 f1 c==> c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- |- (!k. (((\k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) k) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k))))
T c==> * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_10302976 = _10302981), (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302975 = _10302980) ==> ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= cztrans f4 f6 f2 f8 f0 cztrans f5 f7 f3 f9 f1
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), ((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) /\ (((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c/\ c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- ((((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)
T * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- (((real_ge (real_of_int _10302932)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302932))) ((real_add (real_of_int _10302933)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302932)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302933))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302933)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))) |- (((~ ((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i))) ==> (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) = F)) = (((((POWER (f_list L)) (sizel ((find_face L) x))) x) = (((((ztrans L) N) r) x) i)) = F))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c= c==> c~ c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4 c= c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4 cF c= c= cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 cztrans f0 f1 f2 f3 f4 cF
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (~ (x = x)) |- ((~ (x = x)) /\ (x = x))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) /\ (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b1 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b1 f1 b1 f3 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- ((sizel ((find_face L) x)) <= (((l'm L) r1) x)) |- (((sizel ((find_face L) x)) <= (((l'm L) r1) x)) = T)
T c==> c<= csizel cfind_face f0 f1 cl'm f0 f2 f1 c= c<= csizel cfind_face f0 f1 cl'm f0 f2 f1 cT
- (((real_ge (real_of_int _10302944)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302944)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302944)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302940)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302941)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302940))) (real_of_int _10302941))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _10302940)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302941))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302936)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302937)) /\ ((((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))) /\ (((real_le ((real_add ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _10302937)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302936)) (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) |- (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) = T)
T c==> cfinal_list f0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cfinal_list f0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f6 c<= f6 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 f6 f2
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((int_lt ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (~ ((int_lt (int_of_num j)) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))))) = (((SUC j) < ((NUMERAL (BIT1 _0)) + (a + (NUMERAL (BIT1 _0))))) = (j < (SUC a))))
T c= c\/ c/\ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c= c< cSUC f0 c+ cNUMERAL cBIT1 c_0 c+ f1 cNUMERAL cBIT1 c_0 c< f0 cSUC f1
- |- ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((l'y L) r1) x) = y) /\ ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f5 f6 f2 f7 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f5 f6 f2 f7 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f5 f6 f2 f7 c==> call part cuniq cquotient_list f0 cntrans f0 f5 f6 f2 f7 c==> cnormal_list f0 cntrans f0 f5 f6 f2 f7 c==> cfinal_list f0 cfind_list cntrans f0 f5 f6 f2 f7 ce_list f2 c==> cs_flag_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 cztrans f0 f5 f6 f2 f7 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (((real_ge (real_of_int _10302936)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302937)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302936))) ((real_add (real_of_int _10302937)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10302936)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302937))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
- |- ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)
T * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- |- (((!x. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) x) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) ==> ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) = ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c? / c= crtrans f0 f1 f2 f3 f4 b1 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) /\ ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (f = ((find_face L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) ==> (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) ==> ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 cfind_face f0 f2 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f4 f5 f2 f6 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> call part cuniq cquotient_list f0 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c==> cmarked_list f0 f4 f5 f2 c==> cmarked_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> cfinal_list f0 cfind_list cntrans f0 f4 f5 f2 f6 ce_list f2 c==> cs_flag_list f0 cntrans f0 f4 f5 f2 f6 f1 f2 c==> c= crtrans f0 f4 f5 f2 f6 f1 c==> c= cl'y f0 f1 f2 f7 c==> c= cprev_el f1 cztrans f0 f4 f5 f2 f6 f8 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f4 f5 f2 f6 cfind_face f0 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) ==> ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)) = ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j))
T c= c==> ! c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))) = T)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f6 c<= f6 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 f6 f2 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) /\ ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c/\ ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- ((_10302972 = _10302977) ==> ((~ (_10302973 = _10302978)) \/ ((~ (_10302974 = _10302979)) \/ ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
- (!L'. (!N. (!r. (!x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x)))))))) |- ((\x'. (!i. (((transform_assumption_v2 L') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N) r) x') /\ ((((find_face L) x) = ((find_face L') x')) /\ (~ ((final_list L') (((((rtrans L') N) r) x') i)))))))) ==> ((MEM (((((ztrans L') N) r) x') i)) ((find_face L) x))))) x')
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face f0 f1 cfind_face b0 b3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cMEM cztrans b0 b1 b2 b3 b4 cfind_face f0 f1 * / ! c==> c/\ ctransform_assumption_v2 f2 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f4 b0 c/\ c= cfind_face f0 f1 cfind_face f2 b0 c~ cfinal_list f2 crtrans f2 f3 f4 b0 b1 cMEM cztrans f2 f3 f4 b0 b1 cfind_face f0 f1 f5
- ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F), (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) ==> ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)) |- (((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F) /\ ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))
T c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c==> c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c/\ c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF c==> c~ c==> c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0 cF
- |- ((!i. (!r. (!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))))) = T)
T c= ! ! ! c==> c= f0 cztrans f1 b2 b1 f0 b0 c==> c~ c= cztrans f1 b2 b1 f0 b0 f0 c< f2 csizel cfind_face f1 f0 cT
- (_10302975 = _10302980), (_10302976 = _10302981), (_10302974 = _10302979), (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302975 = _10302980) /\ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f0 f1 c= cztrans f6 f8 f4 f0 f2 cztrans f7 f9 f5 f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), (((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))))) ==> ((\x. (!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))))) x)) = ((\x. (!L. (!k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))))) x))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 cF * / ! ! ! ! ! c==> c~ c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 cF f0 * / ! ! ! ! ! c==> c~ c==> c= b0 cztrans b1 b5 b4 b0 b3 c==> c~ c= cztrans b1 b5 b4 b0 b3 b0 c< b2 csizel cfind_face b1 b0 cF f0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302925)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302946)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302946))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302946)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\k. (!i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F))))) k)
T * / ! ! ! c==> c~ c==> c= f0 cztrans f1 b3 b2 f0 b1 c==> c~ c= cztrans f1 b3 b2 f0 b1 f0 c< b0 csizel cfind_face f1 f0 cF f2
- |- ((!r. (!N. ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x))))))) = T)
T c= ! ! c==> c= f0 cztrans f1 b1 b0 f0 f2 c==> c~ c= cztrans f1 b1 b0 f0 f2 f0 c< f3 csizel cfind_face f1 f0 cT
- ((\y. ((((l'y L) r1) x) = y)) y) |- (((\y. ((((l'y L) r1) x) = y)) y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)) ==> (?k. ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k)))
T c==> c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0 c? / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f0 cSUC cSUC b2 f1 cf_list f2 cPOWER * part cnext_el f0 cSUC b2 f1 b2 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((((ztrans L) N) r) x) i) = (((POWER (f_list L)) (sizel ((find_face L) x))) x))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (x = (((((ztrans L) N) r) x) i)), (((PRE (sizel ((find_face L) x))) <= k) ==> (((next_el r1) (((POWER (next_el r1)) (PRE (sizel ((find_face L) x)))) x)) = (((POWER (f_list L)) (PRE (sizel ((find_face L) x)))) ((f_list L) x)))), ((sizel ((find_face L) x)) <= (SUC k)), ((NUMERAL _0) < (sizel ((find_face L) x))), ((MEM x) (list_of_darts L)), ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((SUC (PRE (sizel ((find_face L) x)))) = (sizel ((find_face L) x))) ==> (((PRE (sizel ((find_face L) x))) <= k) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ c= cztrans f0 f1 f2 f3 f4 cPOWER * part cf_list f0 csizel cfind_face f0 f3 f3 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c==> c<= cPRE csizel cfind_face f0 f3 f5 c= cnext_el f6 cPOWER * part cnext_el f6 cPRE csizel cfind_face f0 f3 f3 cPOWER * part cf_list f0 cPRE csizel cfind_face f0 f3 cf_list f0 f3 c==> c<= csizel cfind_face f0 f3 cSUC f5 c==> c< cNUMERAL c_0 csizel cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f6 f3 f6 c==> c= cSUC cPRE csizel cfind_face f0 f3 csizel cfind_face f0 f3 c==> c<= cPRE csizel cfind_face f0 f3 f5 c< f5 csizel cfind_face f0 f3
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))) ==> ((MEM w) ((find_face L) x))))))))) f)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= b0 cfind_face b2 b5 c= b1 cnext_el b0 b5 cMEM b1 cfind_face b2 b5 f0
- ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((normal_list L) (((((ntrans L) N) r) x) i)) = T)
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c= cnormal_list f0 cntrans f0 f1 f2 f3 f4 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r1)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) (((((ztrans L) N) r) x) i)) = z), ((((l'y L) r1) x) = y), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM x) (list_of_darts L)), ((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((MEM r1) (((((ntrans L) N) r) x) i)), ((all (\v. ((sizel ((filter (MEM v)) ((quotient_list L) (((((ntrans L) N) r) x) i)))) > (NUMERAL (BIT1 _0))))) (flatten ((quotient_list L) (((((ntrans L) N) r) x) i)))), ((all uniq) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) (((((ntrans L) N) r) x) i)), ((final_list L) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- ((uniq ((find_face L) x)) ==> (((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((f_list L) (((POWER (f_list L)) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x)) = ((next_el ((find_face L) x)) (((POWER (next_el ((find_face L) x))) (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) x))) ==> ((!i. ((i <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) < (sizel ((find_face L) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f4 f2 f5 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 cfind_face f0 f2 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el cfind_face f0 f2 f2 cfind_face f0 f2 c==> cMEM cytrans f0 f3 f4 f2 f5 cfind_face f0 f2 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> call / c> csizel cfilter * part cMEM b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 cNUMERAL cBIT1 c_0 cflatten cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call part cuniq cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cfinal_list f0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cmarked_list f0 f3 f4 f2 c==> cmarked_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> cuniq cfind_face f0 f2 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> c= cf_list f0 cPOWER * part cf_list f0 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 cnext_el cfind_face f0 f2 cPOWER * part cnext_el cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f2 c==> ! c==> c<= b0 cmin_num * part cGSPEC / c? / cSETSPEC b1 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b2 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b2 f2 b2 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 csizel cfind_face f0 f2
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (_10302972 = _10302977), (_10302973 = _10302978) |- ((_10302974 = _10302979) ==> ((~ (_10302976 = _10302981)) \/ ((~ (_10302975 = _10302980)) \/ ((((((ztrans _10302972) _10302973) _10302974) _10302975) _10302976) = (((((ztrans _10302977) _10302978) _10302979) _10302980) _10302981)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= cztrans f0 f2 f4 f8 f6 cztrans f1 f3 f5 f9 f7
- (~ ((((((ztrans L) N) r) x) i) = x)), (x = (((((ztrans L) N) r) x) i)) |- ((~ F) ==> F)
T c==> c~ c= cztrans f0 f1 f2 f3 f4 f3 c==> c= f3 cztrans f0 f1 f2 f3 f4 c==> c~ cF cF
- |- (!z. (((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z) ==> (?z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z))))
T c==> * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6 c? / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0
- |- ((\i. (!r. (!N. ((~ ((x = (((((ztrans L) N) r) x) i)) ==> ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))) ==> F)))) i)
T * / ! ! c==> c~ c==> c= f0 cztrans f1 b2 b1 f0 b0 c==> c~ c= cztrans f1 b2 b1 f0 b0 f0 c< f2 csizel cfind_face f1 f0 cF f3
- ((((l'y L) r1) x) = y) |- (((((l'y L) r1) x) = y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) ==> ((w = ((next_el f) x)) ==> (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) i)) ==> (((MEM r1) (((((ntrans L) N) r) x) i)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = y) ==> ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) ==> (((MEM ((next_el ((find_face L) x)) x)) ((find_face L) x)) /\ (((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)) /\ ((uniq ((find_face L) x)) /\ (((((POWER (next_el ((find_face L) x))) (((l'm L) r1) x)) ((next_el ((find_face L) x)) x)) = (((((ytrans L) N) r) x) i)) /\ ((((l'm L) r1) x) < (sizel ((find_face L) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c= f5 cfind_face f0 f3 c==> c= f6 cnext_el f5 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f7 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f7 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cztrans f0 f1 f2 f3 f4 f9 c/\ cMEM cnext_el cfind_face f0 f3 f3 cfind_face f0 f3 c/\ cMEM cytrans f0 f1 f2 f3 f4 cfind_face f0 f3 c/\ cuniq cfind_face f0 f3 c/\ c= cPOWER * part cnext_el cfind_face f0 f3 cl'm f0 f7 f3 cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 f4 c< cl'm f0 f7 f3 csizel cfind_face f0 f3
- |- (((!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) ==> ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)) = ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x))
T c= c==> ! ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (x = (((((ztrans L) N) r) x) i)) |- ((x = (((((ztrans L) N) r) x) i)) /\ ((~ ((((((ztrans L) N) r) x) i) = x)) ==> (k < (sizel ((find_face L) x)))))
T c==> c= f0 cztrans f1 f2 f3 f0 f4 c/\ c= f0 cztrans f1 f2 f3 f0 f4 c==> c~ c= cztrans f1 f2 f3 f0 f4 f0 c< f5 csizel cfind_face f1 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r1)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k), (f = ((find_face L) x)), ((((((rtrans L) N) r) x) i) = r1), ((sizel ((find_face L) x)) <= (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m)))))), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) i)) ((find_face L) x)), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((min_num (GSPEC (\GEN%PVAR%8672. (?m. (((SETSPEC GEN%PVAR%8672) (~ ((((POWER (next_el r1)) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el r1)) (SUC m)) x))))) m))))) = k) /\ ((!i. ((i <= k) ==> ((((POWER (next_el r1)) (SUC i)) x) = (((POWER (f_list L)) i) ((f_list L) x))))) ==> (k < (sizel ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cf_list f0 f2 cnext_el crotate_to f1 f2 f2 c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> c= f4 cfind_face f0 f2 c==> c= crtrans f0 f5 f6 f2 f7 f1 c==> c<= csizel cfind_face f0 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cytrans f0 f5 f6 f2 f7 cfind_face f0 f2 c==> cmarked_list f0 f5 f6 f2 c==> cmarked_list f0 cntrans f0 f5 f6 f2 f7 f1 f2 c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el f1 cSUC cSUC b1 f2 cf_list f0 cPOWER * part cnext_el f1 cSUC b1 f2 b1 f3 c==> ! c==> c<= b0 f3 c= cPOWER * part cnext_el f1 cSUC b0 f2 cPOWER * part cf_list f0 b0 cf_list f0 f2 c< f3 csizel cfind_face f0 f2
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302924)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302925)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302926)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302924))) ((real_add (real_of_int _10302925)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302925))) (real_of_int _10302926))) (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302924)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302926))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((~ (_10302966 = _10302968)) \/ ((~ (_10302967 = _10302969)) \/ (((find_face _10302966) _10302967) = ((find_face _10302968) _10302969))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- |- ((((prev_el r1) (((((ztrans L) N) r) x) i)) = z) = ((\z. (((prev_el r1) (((((ztrans L) N) r) x) i)) = z)) z))
T c= c= cprev_el f0 cztrans f1 f2 f3 f4 f5 f6 * / c= cprev_el f0 cztrans f1 f2 f3 f4 f5 b0 f6
